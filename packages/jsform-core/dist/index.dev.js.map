{"version":3,"sources":["webpack://JSFCORE/webpack/bootstrap","webpack://JSFCORE/(webpack)/buildin/global.js","webpack://JSFCORE/(webpack)/node_modules/inherits/inherits_browser.js","webpack://JSFCORE/(webpack)/node_modules/process/browser.js","webpack://JSFCORE/(webpack)/node_modules/util/support/isBufferBrowser.js","webpack://JSFCORE/(webpack)/node_modules/util/util.js","webpack://JSFCORE/./node_modules/invariant/browser.js","webpack://JSFCORE/./src/factory/factory.ts","webpack://JSFCORE/./src/factory/index.ts","webpack://JSFCORE/./src/index.ts","webpack://JSFCORE/./src/keywords/anyof.ts","webpack://JSFCORE/./src/keywords/defined.ts","webpack://JSFCORE/./src/keywords/index.ts","webpack://JSFCORE/./src/keywords/oneof.ts","webpack://JSFCORE/./src/keywords/ref.ts","webpack://JSFCORE/./src/libs/factory.ts","webpack://JSFCORE/./src/libs/index.ts","webpack://JSFCORE/./src/libs/merge.ts","webpack://JSFCORE/./src/libs/resolve.ts","webpack://JSFCORE/./src/libs/tree.ts","webpack://JSFCORE/./src/types/array.ts","webpack://JSFCORE/./src/types/index.ts","webpack://JSFCORE/./src/types/normal.ts","webpack://JSFCORE/./src/types/object.ts","webpack://JSFCORE/./src/utils/index.ts"],"names":[],"mappings":";;AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACtBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;;;;;;ACvLtC;AACA;AACA;AACA;AACA;AACA,C;;;;;;;;;;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,sBAAsB;AACzC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,uBAAuB,SAAS;AAChC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,4CAA4C,KAAK;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL;;AAEA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;AACA,mCAAmC,OAAO;AAC1C;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;;AAGA;AACA;AACA,yDAAyD;AACzD;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,SAAS;AACT;AACA;AACA,WAAW;AACX;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;;AAGA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB;AACA,WAAW,SAAS;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;;ACzkBA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,qCAAqC;AACrC;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,0CAA0C,yBAAyB,EAAE;AACrE;AACA;AACA;;AAEA,0BAA0B;AAC1B;AACA;AACA;;AAEA;;;;;;;;;;;;;;;;;;;AC9CA;AAGA;;;;;AAGa,6BAAqB,IAAI,qBAAJ,EAArB;AACb;;;;AAGa,+BAAuB,IAAI,qBAAJ,EAAvB;AACb;;;;AAGa,4BAAoB,IAAI,qBAAJ,EAApB;AACb;;;;;AAIa,4BAAoB,IAAI,qBAAJ,EAApB,C;;;;;;;;;;;;;;;;;;;;;;ACrBb,2E;;;;;;;;;;;;;;;;;;;;;;ACAA;;AACA;;AACA;;AAuBI,6BAvBI,4BAuBJ;AACA,+BAxBwB,8BAwBxB;AACA,4BAzB8C,2BAyB9C;AAHA,4BAtBiE,2BAsBjE;;AAnBJ;;AACA;;AAAQ;AAAQ;AAAS;AAAU;AAAU;AAE7C,+BAAqB,GAArB,CAAyB,aAAzB,EAAwC,sBAAxC,EACK,GADL,CACS,OADT,EACkB,gBADlB,EAEK,GAFL,CAES,OAFT,EAEkB,gBAFlB,EAGK,GAHL,CAGS,KAHT,EAGgB,cAHhB;AAKA,4BAAkB,GAAlB,CAAsB,OAAtB,EAA+B,aAA/B,EACK,GADL,CACS,QADT,EACmB,cADnB,EAEI;AACA;AACA;AACA;AACA;AACA;AAPJ,CAQK,GARL,CAQS,QART,EAQmB,cARnB,E;;;;;;;;;;;;;;;;;;ACXA;;AACA;AAEA;;;;;;;;;AAOA,MAAM,KAAK,GAAG,CAAC,GAAD,EAAc,MAAd,KAAkD;AAC5D,QAAM;AAAC;AAAD,MAAU,MAAhB;;AAEA,MAAI,KAAK,IAAI,gBAAQ,KAAR,CAAb,EAA6B;AACzB,UAAM,CAAC,KAAP,GAAe,KAAK,CAAC,GAAN,CAAW,WAAD,IAAuC;AAC5D,aAAO,kBAAQ,WAAR,EAAoC,MAAM,CAAC,GAAP,IAAc,sBAAY,MAAM,CAAC,IAAP,IAAe,EAA3B,CAAd,GAA+C,SAA/C,GAA2D,sBAAY,GAAZ,CAA/F,CAAP;AACH,KAFc,CAAf;AAGH;;AAED,SAAO,MAAP;AACH,CAVD;;AAYA,kBAAe,KAAf,C;;;;;;;;;;;;;;;;;;ACtBA;;AACA;AAEA;;;;;;;;;AAOA,MAAM,OAAO,GAAG,CAAC,IAAD,EAAe,MAAf,KAAmD;AAC/D,QAAM,WAAW,GAAG,MAAM,CAAC,WAA3B;;AAEA,MAAI,CAAC,WAAL,EAAkB;AACd,WAAO,MAAP;AACH;;AAED,OAAK,MAAM,GAAX,IAAkB,WAAlB,EAA+B;AAC3B,QAAI,WAAW,CAAC,cAAZ,CAA2B,GAA3B,CAAJ,EAAqC;AACjC,YAAM,OAAO,GAA0B,WAAW,CAAC,GAAD,CAAlD;;AAEA,UAAI,CAAC,iBAAU,OAAV,CAAL,EAAyB;AACrB;AACA,0BAAQ,OAAR,EAAiB,GAAG,MAAM,CAAC,GAAG,iBAAiB,GAAG,EAAlD;AACH;AACJ;AACJ;;AAED,SAAO,MAAP;AACH,CAnBD;;AAqBA,kBAAe,OAAf,C;;;;;;;;;;;;;;;;;;ACjCA;;AAAS;;AACT;;AAAS;;AACT;;AAAS;;AACT;;AAAS,wC;;;;;;;;;;;;;;;;;;ACDT;;AACA;AAEA;;;;;;;;;AAOA,kBAAe,CAAC,IAAD,EAAe,MAAf,KAAmD;AAC9D,QAAM,KAAK,GAAG,MAAM,CAAC,KAArB;;AAEA,MAAI,KAAK,IAAI,gBAAQ,KAAR,CAAb,EAA6B;AACzB,UAAM,CAAC,KAAP,GAAe,KAAK,CAAC,GAAN,CAAW,WAAD,IAAuC;AAC5D,aAAO,kBAAQ,WAAR,CAAP;AACH,KAFc,CAAf;AAGH;;AAED,SAAO,MAAP;AACH,CAVD,C;;;;;;;;;;;;;;;;;;;;;;;;ACXA;;AAEA;;AACA;AAGA;;;;;;;;;;;AASA,kBAAe,CAAC,GAAD,EAAc,MAAd,KAAqC;AAChD,MAAI,MAAM,IAAI,MAAM,CAAC,IAArB,EAA2B;AACvB,UAAM,QAAQ,GAAG,sBAAY,MAAM,CAAC,IAAnB,CAAjB;AACA,QAAI,OAAO,GAAG,MAAM,CAAC,IAArB;;AAEA,QAAI,MAAM,CAAC,GAAX,EAAgB;AACZ,aAAO,GAAG,MAAM,CAAC,GAAP,GAAa,MAAM,CAAC,IAA9B;AACH,KAFD,MAEO,IAAI,CAAC,QAAL,EAAe;AAClB,aAAO,GAAG,sBAAY,GAAZ,IAAmB,MAAM,CAAC,IAApC;AACH;;AAED,UAAM,CAAC,IAAP,GAAc,OAAd;;AAEA,QAAI,CAAC,6BAAmB,GAAnB,CAAuB,OAAvB,CAAL,EAAsC;AAClC,mCAAmB,GAAnB,CAAuB,OAAvB,EAAgC,EAAhC;AACH;;AAED,UAAM,SAAS,GAAiB,6BAAmB,GAAnB,CAAuB,OAAvB,CAAhC;;AAEA,QAAI,SAAJ,EAAe;AACX,UAAI,SAAS,GAAG,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,SAAlB,CAAhB;AAEA,eAAS,CAAC,IAAV,GAAiB,OAAjB;AAEA,aAAO,CAAC,cAAR,CAAuB,SAAvB,EAAkC,KAAlC;AACA,YAAM,CAAC,MAAP,CAAc,SAAd,EAAyB;AACrB,eAAO,EAAE,kCAAwB,OAAxB;AADY,OAAzB;AAIA,aAAO,SAAP;AACH;;AAED,wBAAU,KAAV,EAAiB,GAAG,OAAO,aAA3B;AACH;;AAED,SAAO,MAAP;AACH,CApCD,C;;;;;;;;;;;;;AChBA;;;;;;;;AAIA;AAEA;;;;;;AAIA,MAAa,WAAb,CAAwB;AAAxB;AACI;;;;;;AAMU,iBAA4B,EAA5B;AACV;;;;;;;AAMQ,iBAAkC,EAAlC;AAiGX;AA/FG;;;;;;;;;;;;;AAWO,KAAG,CAAC,IAAD,EAAe,QAAf,EAA4B,QAAQ,GAAG,KAAvC,EAA4C;AAClD,QAAI,uBAAe,IAAf,CAAoB,KAAK,KAAzB,EAAgC,IAAhC,KAA0C,KAAK,GAAL,CAAS,IAAT,KAAkB,CAAC,QAAjE,EAA4E;AACxE,aAAO,IAAP;AACH;;AAED,SAAK,KAAL,CAAW,IAAX,IAAmB,QAAnB;AAEA,WAAO,IAAP;AACH;AAED;;;;;;;;AAMO,KAAG,CAAC,GAAD,EAAY;AAClB,WAAO,uBAAe,IAAf,CAAoB,KAAK,KAAzB,EAAgC,GAAhC,CAAP;AACH;AAED;;;;;;;;AAMO,KAAG,CAAC,GAAD,EAAY;AAClB,QAAI,KAAK,GAAL,CAAS,GAAT,CAAJ,EAAmB;AACf,aAAO,KAAK,KAAL,CAAW,GAAX,CAAP;AACH;;AAED,WAAO,IAAP;AACH;AAED;;;;;;;AAKO,MAAI,CAAC,GAAD,EAAY;AACnB,QAAI,KAAK,GAAL,CAAS,GAAT,CAAJ,EAAmB;AACf,WAAK,KAAL,CAAW,GAAX,IAAkB,IAAlB;AACH;AACJ;AAED;;;;;;;AAKO,QAAM,CAAC,GAAD,EAAY;AACrB,QAAI,KAAK,GAAL,CAAS,GAAT,CAAJ,EAAmB;AACf,aAAO,CAAC,cAAR,CAAuB,KAAK,KAA5B,EAAmC,GAAnC;AACH;AACJ;AAED;;;;;;;;AAMO,SAAO,CAAC,IAAD,EAAmC;AAC7C,QAAI,CAAC,IAAL,EAAW;AACP;AACH;;AAED,SAAK,MAAM,GAAX,IAAkB,KAAK,KAAvB,EAA8B;AAC1B,YAAM,OAAO,GAAG,KAAK,KAAL,CAAW,GAAX,CAAhB;;AAEA,UAAI,IAAI,CAAC,GAAD,EAAM,OAAN,CAAJ,KAAuB,KAA3B,EAAkC;AAC9B;AACH;AACJ;AACJ;AAED;;;;;;AAIO,OAAK;AACR,SAAK,KAAL,GAAa,EAAb;AACA,SAAK,KAAL,GAAa,EAAb;AACH;;AA9GmB;;AAAxB,kC;;;;;;;;;;;;;;;;;;;;;;ACVA;;AACA;;AACA;;AACA,wE;;;;;;;;;;;;;;;;;;;;;;;;ACHA;;AAGA;;AACA;AAGA;;;;;;;;;;;;;AAWA,MAAM,uBAAuB,GAAG,CAAC,YAAD,EAAyB,gBAAzB,KAA6D;AACzF,MAAI,iBAAiB,GAAG,kCAAwB,gBAAxB,EAA0C,IAA1C,CAAxB;;AAEA,SAAO,YAAY,CAAC,MAApB,EAA4B;AACxB,UAAM,GAAG,GAAW,YAAY,CAAC,KAAb,MAAwB,EAA5C;AAEA,qBAAiB,GAAG,iBAAiB,CAAC,MAAlB,CAAyB,GAAG,GAAG,CAAC,GAAD,CAAH,GAAW,EAAvC,CAApB;AAEA,UAAM,OAAO,GAAW,iBAAiB,CAAC,IAAlB,CAAuB,GAAvB,EAA4B,OAA5B,CAAoC,KAApC,EAA2C,EAA3C,CAAxB;;AAEA,QAAI,CAAC,4BAAkB,GAAlB,CAAsB,OAAtB,CAAL,EAAqC;AACjC;AACA;AACA;AACA;AAEA,0BAAU,KAAV,EAAiB,GAAG,OAAO,iBAA3B;AAEA,aAAO,EAAP;AACH;;AAED,UAAM,MAAM,GAAiB,6BAAmB,GAAnB,CAAuB,4BAAkB,GAAlB,CAAsB,OAAtB,CAAvB,CAA7B;;AAEA,QAAI,MAAM,CAAC,IAAX,EAAiB;AACb,uBAAiB,GAAG,kCAAwB,MAAM,CAAC,IAA/B,EAAqC,IAArC,CAApB;AACH;AACJ;;AAED,SAAO,iBAAiB,CAAC,IAAlB,CAAuB,GAAvB,CAAP;AACH,CA7BD;AA8BA;;;;;;;AAKA,MAAM,mBAAmB,GAAI,MAAD,IAA8C;AACtE,MAAI,MAAM,IAAI,MAAM,CAAC,IAArB,EAA2B;AACvB,WAAO,MAAM,CAAC,IAAd;AACH;;AAED,SAAO,EAAP;AACH,CAND;AAQA;;;;;;;;;;;AASA,MAAM,mBAAmB,GAAG,CAAC,MAAD,EAA+B,UAA/B,EAAmD,QAAnD,KAAiF;AACzG,QAAM,GAAG,GAAG,sBAAY,UAAZ,CAAZ;AACA,MAAI,YAAY,GAAG,QAAQ,CAAC,GAAT,CAAa,KAAb,CAAmB,GAAnB,CAAnB,CAFyG,CAIzG;;AACA,MAAI,MAAM,IAAI,sBAAY,MAAM,CAAC,GAAnB,MAA4B,GAA1C,EAA+C;AAC3C,WAAO,uBAAuB,CAAC,YAAD,EAAe,MAAM,CAAC,UAAP,IAAqB,EAApC,CAA9B;AACH,GAPwG,CASzG;AACA;AAEA;;;AAEA,SAAO,uBAAuB,CAAC,YAAD,EAAe,UAAf,CAA9B;AACH,CAfD;AAiBA;;;;;;;;AAMA,MAAM,oBAAoB,GAAI,QAAD,IAAiC;AAC1D,MAAI,CAAC,4BAAkB,GAAlB,CAAsB,QAAQ,CAAC,GAA/B,CAAL,EAA0C;AACtC;AACA;AACA;AACA;AAEA,wBAAU,KAAV,EAAiB,GAAG,QAAQ,CAAC,GAAG,wDAAhC;AAEA,WAAO,QAAP;AACH;;AAED,QAAM,SAAS,GAAW,4BAAkB,GAAlB,CAAsB,QAAQ,CAAC,GAA/B,CAA1B;AACA,QAAM,MAAM,GAAG,6BAAmB,GAAnB,CAAuB,SAAvB,CAAf;AAEA,SAAO,MAAM,CAAC,MAAP,CAAc,EAAd,EAAkB,MAAlB,EAA0B,QAA1B,CAAP;AACH,CAhBD;AAkBA;;;;;;;;;;;AASA,MAAM,YAAY,GAAG,CAAC,MAAD,EAA+B,UAA/B,EAAmD,QAAnD,KAAmF;AACpG,MAAI,UAAU,GAAG,mBAAmB,CAAC,MAAD,CAApC;AAAA,MACI,GAAG,GAAG,mBAAmB,CAAC,MAAD,EAAS,UAAT,EAAqB,QAArB,CAD7B;AAAA,MAEI,IAFJ;AAAA,MAGI,UAAU,GAAG,KAHjB;AAAA,MAII,YAAY,GAAiB,EAJjC;AAAA,MAKI,SALJ;AAOA,MAAI,GAAG,UAAU,CAAC,MAAX,CAAkB,QAAQ,CAAC,GAAT,GAAe,QAAQ,CAAC,GAAT,CAAa,KAAb,CAAmB,GAAnB,CAAf,GAAyC,EAA3D,CAAP,CARoG,CAUpG;AACA;AAEA;AACA;;AAEA,MAAI,4BAAkB,GAAlB,CAAsB,GAAtB,CAAJ,EAAgC;AAC5B,aAAS,GAAG,4BAAkB,GAAlB,CAAsB,GAAtB,CAAZ;;AACA,QAAI,6BAAmB,GAAnB,CAAuB,SAAvB,CAAJ,EAAuC;AACnC,kBAAY,GAAG,6BAAmB,GAAnB,CAAuB,SAAvB,CAAf,CADmC,CAEnC;AACH;AACJ;;AAED,SAAO,MAAM,CAAC,MAAP,CAAc;AAAC;AAAD,GAAd,EAA4B,YAA5B,EAA0C,QAA1C,EAAoD;AACvD,OADuD;AAEvD;AAFuD,GAApD,CAAP;AAIH,CA5BD;AA8BA;;;;;;;;;;AAQA,MAAM,eAAe,GAAG,CAAC,cAAD,EAA6B,aAA7B,EAAwD,QAAxD,KAAoF;AACxG,MACI,CAAC,cAAc,CAAC,MAAf,CAAsB,aAAtB,EAAqC,MAArC,CAA6C,GAAD,IAAkB;AAC3D,WAAO,GAAG,CAAC,GAAJ,KAAY,QAAQ,CAAC,GAA5B;AACH,GAFA,EAEE,MAHP,EAIE;AACE,YAAQ,GAAG,oBAAoB,CAAC,QAAD,CAA/B;AACA,kBAAc,CAAC,IAAf,CAAoB,QAApB;AACH;AACJ,CATD;AAWA;;;;;;;;;;;;;;AAcA;;;AACA,MAAM,eAAe,GAAG,CAAC,MAAD,EAA+B,UAA/B,EAAmD,SAAnD,EAAwF,SAAxF,KAA+H;AACnJ,MAAI,GAAG,GAAW,SAAS,CAAC,OAAV,CAAkB,GAAlB,CAAlB;AAAA,MACI,cAAc,GAAe,EADjC;AAAA,MAEI,aAAa,GAAe,EAFhC;AAAA,MAGI,KAAK,GAAG,CAAC,QAAD,EAAW,OAAX,CAHZ,CADmJ,CAMnJ;;AACA,MAAI,SAAS,CAAC,WAAV,CAAsB,GAAtB,MAA+B,GAAnC,EAAwC;AACpC;AACA;AACA;AACA;AAEA,wBAAU,KAAV,EAAiB,8BAAjB;AAEA,WAAO,EAAP;AACH,GAhBkJ,CAkBnJ;;;AACA,MAAI,GAAG,GAAG,CAAV,EAAa;AACT,aAAS,CAAC,KAAV,CAAgB,GAAG,GAAG,CAAtB,EAAyB,GAAzB,CAA8B,EAAD,IAA0B;AACnD,UAAI,QAAQ,GAAG,YAAY,CAAC,MAAD,EAAS,UAAT,EAAqB,EAAE,CAAC,WAAH,KAAmB,MAAnB,GAA4B;AAAC,WAAG,EAAE;AAAN,OAA5B,GAAoD,EAAzE,CAA3B;AAEA,oBAAc,CAAC,IAAf,CAAoB,oBAAoB,CAAC,QAAD,CAAxC;AACH,KAJD;AAMA,WAAO,cAAP;AACH,GA3BkJ,CA6BnJ;;;AACA,WAAS,CAAC,KAAV,CAAgB,CAAhB,EAAmB,GAAnB,EAAwB,OAAxB,CAAiC,EAAD,IAA0B;AACtD,QAAI,QAAQ,GAAG,YAAY,CAAC,MAAD,EAAS,SAAS,CAAC,UAAV,IAAwB,UAAjC,EAA6C,EAAE,CAAC,WAAH,KAAmB,MAAnB,GAA4B;AAAC,SAAG,EAAE;AAAN,KAA5B,GAAoD,EAAjG,CAA3B;AAEA,kBAAc,CAAC,IAAf,CAAoB,oBAAoB,CAAC,QAAD,CAAxC;AACH,GAJD,EA9BmJ,CAoCnJ;;AACA,WAAS,CAAC,KAAV,CAAgB,GAAG,GAAG,CAAtB,EAAyB,OAAzB,CAAkC,EAAD,IAA0B;AACvD,QAAI,QAAQ,GAAG,YAAY,CAAC,MAAD,EAAS,SAAS,CAAC,UAAV,IAAwB,UAAjC,EAA6C,EAAE,CAAC,WAAH,KAAmB,MAAnB,GAA4B;AAAC,SAAG,EAAE;AAAN,KAA5B,GAAoD,EAAjG,CAA3B;AAEA,iBAAa,CAAC,IAAd,CAAmB,oBAAoB,CAAC,QAAD,CAAvC;AACH,GAJD,EArCmJ,CA2CnJ;;AACA,MAAI,SAAS,CAAC,IAAV,KAAmB,KAAK,CAAC,CAAD,CAAxB,IAA+B,SAAS,CAAC,UAA7C,EAAyD;AACrD,UAAM,CAAC,IAAP,CAAY,SAAS,CAAC,UAAtB,EAAkC,OAAlC,CAA2C,EAAD,IAAe;AACrD,YAAM,QAAQ,GAAG,YAAY,CAAC,MAAD,EAAS,SAAS,CAAC,UAAV,IAAwB,UAAjC,EAA6C;AACtE,WAAG,EAAE,EADiE;AAEtE,kBAAU,EAAE,SAAS,CAAC,QAAV,GAAqB,SAAS,CAAC,QAAV,CAAmB,OAAnB,CAA2B,EAA3B,KAAkC,CAAvD,GAA2D;AAFD,OAA7C,CAA7B;AAKA,qBAAe,CAAC,cAAD,EAAiB,aAAjB,EAAgC,QAAhC,CAAf;AACH,KAPD;AAQH,GArDkJ,CAuDnJ;;;AACA,MAAI,SAAS,CAAC,IAAV,KAAmB,KAAK,CAAC,CAAD,CAAxB,IAA+B,SAAS,CAAC,KAA7C,EAAoD;AAChD,UAAM,QAAQ,GAAG,YAAY,CAAC,MAAD,EAAS,SAAS,CAAC,UAAV,IAAwB,UAAjC,EAA6C;AACtE,SAAG,EAAE;AADiE,KAA7C,CAA7B;AAIA,mBAAe,CAAC,cAAD,EAAiB,aAAjB,EAAgC,QAAhC,CAAf;AACH,GA9DkJ,CAgEnJ;;;AACA,MAAI,KAAK,CAAC,OAAN,CAAc,SAAS,CAAC,IAAxB,IAA0C,CAA9C,EAAiD;AAC7C,QAAI,QAAQ,GAAG,YAAY,CAAC,MAAD,EAAS,UAAT,EAAqB;AAC5C,SAAG,EAAE,kCAAwB,SAAS,CAAC,UAAV,IAAwB,EAAhD,EAAoD,KAApD,EAA2D,IAA3D,CAAgE,GAAhE;AADuC,KAArB,CAA3B;AAIA,mBAAe,CAAC,cAAD,EAAiB,aAAjB,EAAgC,QAAhC,CAAf;AACH;;AAED,SAAO,cAAc,CAAC,MAAf,CAAsB,aAAtB,CAAP;AACH,CA1ED;AA4EA;;;;;;;;AAMa,gBAAQ,CAAC,UAAD,EAAqB,MAArB,EAAwC,SAAxC,KAA4F;AAC7G;AACA,MAAI,OAAO,GAAW,kCAAwB,UAAxB,EAAoC,IAApC,EAA0C,IAA1C,CAA+C,GAA/C,CAAtB,CAF6G,CAI7G;;AACA,MAAI,CAAC,4BAAkB,GAAlB,CAAsB,OAAtB,CAAL,EAAqC;AACjC;AACA;AACA;AAEA,wBAAU,KAAV,EAAiB,GAAG,OAAO,iBAAiB,OAAO,uBAAnD;AAEA,WAAO,EAAP;AACH,GAb4G,CAe7G;;;AACA,QAAM,SAAS,GAAG,6BAAmB,GAAnB,CAAuB,4BAAkB,GAAlB,CAAsB,OAAtB,CAAvB,CAAlB,CAhB6G,CAkB7G;;AACA,MAAI,SAAS,CAAC,GAAd,EAAmB;AACf,QAAI,CAAC,SAAS,CAAC,IAAf,EAAqB;AACjB,eAAS,CAAC,IAAV,GAAiB,SAAS,CAAC,GAA3B;AACH;;AACD,aAAS,CAAC,GAAV,GAAgB,SAAhB;AACA,WAAO,SAAS,CAAC,GAAjB;AACH,GAzB4G,CA2B7G;;;AACA,SAAO,eAAe,CAAC,MAAD,EAAS,UAAT,EAAqB,SAAS,IAAI,CAAC,GAAD,CAAlC,EAAyC,SAAzC,CAAtB;AACH,CA7BY,C;;;;;;;;;;;;;;;;;;;;;;;;ACzQb;;AAEA;;AACA;AAEA;;;;;;;;;;;;;;AAYA,MAAM,uBAAuB,GAAG,CAAC,UAAD,EAAqB,SAAS,GAAG,KAAjC,KAAoD;AAChF,QAAM,MAAM,GAAG,KAAf;AAEA,SAAO,UAAU,CAAC,KAAX,CAAiB,GAAjB,EAAsB,GAAtB,CAA0B,CAAC,GAAD,EAAc,KAAd,KAA+B;AAC5D;AACA,QAAI,KAAK,KAAK,CAAV,IAAe,MAAM,CAAC,IAAP,CAAY,GAAZ,CAAnB,EAAqC;AACjC;AACA;AACA;AACA,YAAM,CAAC,SAAP,GAAmB,CAAnB;AAEA,aAAO,SAAS,GAAG,GAAG,CAAC,OAAJ,CAAY,MAAZ,EAAoB,EAApB,CAAH,GAA6B,IAA7C;AACH,KAT2D,CAW5D;;;AACA,QAAI,GAAG,KAAK,YAAZ,EAA0B;AACtB,aAAO,IAAP;AACH,KAd2D,CAgB5D;;;AACA,QAAI,GAAG,KAAK,OAAZ,EAAqB;AACjB,aAAO,GAAP;AACH;;AAED,WAAO,GAAP;AACH,GAtBM,EAsBJ,MAtBI,CAsBI,GAAD,IAAuB;AAC7B,WAAO,GAAG,KAAK,IAAf;AACH,GAxBM,CAAP;AAyBH,CA5BD;;AA4HI;AA9FJ;;;;;;AAKA,MAAM,WAAW,GAAI,UAAD,IAA+B;AAC/C,QAAM,IAAI,GAAG,UAAU,CAAC,KAAX,CAAiB,GAAjB,CAAb;AACA,QAAM,MAAM,GAAG,KAAf;;AAEA,MAAI,CAAC,IAAI,CAAC,MAAV,EAAkB;AACd;AACA,WAAO,EAAP;AACH,GAP8C,CAS/C;AACA;AACA;AACA;;;AAEA,SAAO,IAAI,CAAC,CAAD,CAAJ,CAAQ,OAAR,CAAgB,MAAhB,EAAwB,EAAxB,CAAP;AACH,CAfD;;AA0FI;AAxEJ;;;;;;;;AAOA,MAAM,UAAU,GAAI,MAAD,IAAqC;AACpD,MAAI,GAAG,GAAuB,MAAM,CAAC,GAArC,CADoD,CAGpD;;AACA,MAAI,CAAC,GAAD,IAAQ,CAAC,MAAM,CAAC,IAApB,EAA0B;AACtB,wBAAU,KAAV,EAAiB,gBAAjB;AACA,WAAO,MAAP;AACH;;AAED,SAAO,MAAP;AACH,CAVD;AAYA;;;;;;;;;;AAQA,MAAM,aAAa,GAAG,CAAC,GAAD,EAAc,MAAd,KAAkD;AACpE,MAAI,CAAC,4BAAkB,GAAlB,CAAsB,QAAtB,CAAL,EAAsC;AAClC,WAAO,MAAP;AACH;;AAED,QAAM,EAAE,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,GAAP,IAAc,EAAf,IAAqB,GAAvC;AACA,MAAI,YAAY,GAAG,4BAAkB,GAAlB,CAAsB,QAAtB,EAAgC,EAAhC,EAAoC,MAApC,CAAnB,CANoE,CAQpE;;AACA,MAAI,CAAC,MAAM,CAAC,IAAR,IAAgB,MAAM,CAAC,IAA3B,EAAiC;AAC7B,WAAO,YAAP;AACH,GAXmE,CAapE;;;AACA,MAAI,CAAC,iBAAS,MAAM,CAAC,IAAhB,CAAL,EAA4B;AACxB,wBAAU,KAAV,EAAiB,eAAe,MAAM,CAAC,IAAI,uBAA3C;AACA,WAAO,YAAP;AACH;;AAED,QAAM,IAAI,GAAW,MAAM,CAAC,IAAP,CAAY,QAAZ,EAArB,CAnBoE,CAqBpE;;AACA,MAAI,4BAAkB,GAAlB,CAAsB,IAAtB,KAA+B,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAA4B,IAA5B,KAAqC,CAAxE,EAA2E;AACvE,gBAAY,GAAG,4BAAkB,GAAlB,CAAsB,IAAtB,EAA4B,EAA5B,EAAgC,MAAhC,CAAf;AACH;;AAED,SAAO,YAAP;AACH,CA3BD;AA6BA;;;;;;;;AAMA,MAAM,OAAO,GAAG,CAAC,MAAD,EAAsB,GAAG,GAAG,EAA5B,KAA+C;AAC3D,QAAM,YAAY,GAAG,CAAC,GAAD,GAAO,UAAU,CAAC,MAAD,CAAjB,GAA4B,MAAjD;AACA,QAAM,EAAE,GAAG,GAAG,IAAI,MAAM,CAAC,IAAd,IAAsB,EAAjC,CAF2D,CAI3D;;AACA,SAAO,aAAa,CAAC,EAAD,EAAK,YAAL,CAApB;AACH,CAND;;AAWI,0B;;;;;;;;;;;;;;;;;;AChJJ;AAIA;;;;;;;AAKA,MAAa,OAAb,CAAoB;AAGhB;;;;;;;AAOA,cAAoB,GAApB,EAAwC,KAAxC,EAAoE,MAApE,EAAuF;AAAnE;AAAoB;AAA4B;AAT7D,oBAAyB,EAAzB;AASoF;AAE3F;;;;;;;;AAMO,UAAQ,CAAC,IAAD,EAAmB,KAAnB,EAA8B;AACzC,QAAI,OAAO,GAAe,IAA1B;AACA,QAAI,KAAK,GAAsB,IAA/B;;AAEA,QAAI,CAAC,IAAI,CAAC,MAAV,EAAkB;AACd,aAAO,IAAP;AACH;;AAED,SAAK,MAAM,GAAX,IAAkB,IAAlB,EAAwB;AACpB,WAAK,GAAG,OAAO,CAAC,QAAR,CAAiB,GAAjB,CAAR,CADoB,CAGpB;AACA;AACA;;AACA,UAAI,CAAC,KAAL,EAAY;AACR,YAAI,iBAAS,GAAT,CAAJ,EAAmB;AACf,eAAK,GAAG,IAAI,OAAJ,CAAe,GAAf,EAAoB,IAApB,EAA0B,OAA1B,CAAR;AACA,iBAAO,CAAC,QAAR,CAAiB,GAAjB,IAAkC,KAAlC;AACH,SAHD,MAGO;AACH,eAAK,GAAG,IAAI,OAAJ,CAAe,GAAG,CAAC,QAAJ,EAAf,EAA+B,IAA/B,EAAqC,OAArC,CAAR;AACA,iBAAO,CAAC,QAAR,CAAiB,IAAjB,CAAsB,KAAtB;AACH;AACJ;;AAED,aAAO,GAAG,KAAV;AACH,KAzBwC,CA2BzC;;;AACC,SAAoB,CAAC,KAArB,GAA6B,KAA7B,CA5BwC,CA6BzC;;AAEA,WAAO,KAAP;AACH;AAED;;;;;;;;AAMO,QAAM;AACT,QAAI,CAAC,KAAK,GAAN,IAAa,KAAK,GAAL,KAAa,GAA9B,EAAmC;AAC/B,aAAO,KAAK,gBAAL,GAAwB,QAAxB,EAAP;AACH;;AAED,WAAO,KAAK,GAAZ;AACH;AAED;;;;;;;AAKO,gBAAc;AACjB,QAAI,IAAI,GAAe,EAAvB;;AAEA,QAAI,KAAK,MAAT,EAAiB;AACb,UAAI,GAAG,IAAI,CAAC,MAAL,CAAY,KAAK,MAAL,CAAY,cAAZ,EAAZ,CAAP;AACH;;AAED,WAAO,IAAI,CAAC,MAAL,CAAY,CAAC,KAAK,GAAN,CAAZ,CAAP;AACH;AAED;;;;;;;AAKO,kBAAgB;AACnB,QAAI,KAAK,GAAG,CAAC,CAAb;;AAEA,QAAI,CAAC,KAAK,MAAV,EAAkB;AACd,aAAO,KAAP;AACH;;AAED,UAAM;AAAC;AAAD,QAAa,KAAK,MAAxB;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,QAAQ,CAAC,MAA7B,EAAqC,CAAC,GAAG,CAAzC,EAA4C,CAAC,EAA7C,EAAiD;AAC7C,YAAM,KAAK,GAAG,QAAQ,CAAC,CAAD,CAAtB;;AAEA,UAAI,KAAK,IAAI,KAAK,KAAK,IAAvB,EAA6B;AACzB,aAAK,GAAG,CAAR;AACA;AACH;AACJ;;AAED,WAAO,KAAP;AACH;AAED;;;;;;;;AAMO,UAAQ,CAAC,GAAD,EAAS;AACpB;AACA,QAAI,iBAAS,GAAT,CAAJ,EAAmB;AACf,UAAI,KAAK,QAAL,CAAc,MAAd,IAAwB,GAA5B,EAAiC;AAC7B,eAAO,IAAP;AACH;;AAED,UAAI,KAAK,GAAG,KAAK,QAAL,CAAc,GAAd,CAAZ;;AAEA,UAAI,CAAC,KAAL,EAAY;AACR,aAAK,QAAL,CAAc,GAAd,IAA+B,IAAI,OAAJ,CAAe,GAAf,EAAoB,IAApB,EAA0B,IAA1B,CAA/B;AAEA,aAAK,GAAG,KAAK,QAAL,CAAc,GAAd,CAAR;AACH;;AAED,aAAO,KAAP;AACH,KAhBmB,CAkBpB;;;AACA,QAAI,KAAK,MAAL,OAAkB,GAAtB,EAA2B;AACvB,aAAO,IAAP;AACH,KArBmB,CAuBpB;;;AACA,QAAI,CAAC,KAAK,QAAN,IAAkB,KAAK,QAAL,CAAc,MAAd,KAAyB,CAA/C,EAAkD;AAC9C,aAAO,IAAP;AACH,KA1BmB,CA2BpB;;;AACA,SAAK,IAAI,CAAC,GAAG,CAAb,EAAgB,CAAC,GAAG,KAAK,QAAL,CAAc,MAAlC,EAA0C,CAAC,EAA3C,EAA+C;AAC3C,YAAM,KAAK,GAAG,KAAK,QAAL,CAAc,CAAd,CAAd;;AAEA,UAAI,KAAK,IAAI,KAAK,CAAC,QAAN,CAAe,GAAf,CAAb,EAAkC;AAC9B,eAAO,KAAP;AACH;AACJ;;AAED,WAAO,IAAP;AACH;AAED;;;;;;;;AAMO,aAAW,CAAC,IAAD,EAAiB;AAC/B,QAAI,IAAI,GAAsB,IAA9B;;AAEA,SAAK,MAAM,GAAX,IAAkB,IAAlB,EAAwB;AACpB,UAAI,GAAG,IAAI,CAAC,QAAL,CAAc,GAAd,CAAP;;AAEA,UAAI,CAAC,IAAL,EAAW;AACP;AACH;AACJ;;AAED,WAAO,IAAP;AACH;AAED;;;;;;AAIO,kBAAgB;AACnB,UAAM,KAAK,GAAG,KAAK,gBAAL,EAAd;;AAEA,QAAI,CAAC,KAAK,MAAV,EAAkB;AACd;AACH;;AAED,SAAK,MAAL,CAAY,QAAZ,CAAqB,MAArB,CAA4B,KAA5B,EAAmC,CAAnC;AACH;AAED;;;;;;;;AAMO,oBAAkB,CAAC,OAAD,EAAgB;AACrC,QAAI,QAAQ,GAAG,KAAK,gBAAL,EAAf,CADqC,CAGrC;;AACA,QAAI,CAAC,KAAK,MAAN,IAAgB,CAAC,KAAK,MAAL,CAAY,QAA7B,IAAyC,QAAQ,GAAG,CAAxD,EAA2D;AACvD;AACH,KANoC,CAQrC;;;AACA,SAAK,gBAAL,GATqC,CAWrC;;AACA,QAAI,KAAK,MAAL,CAAY,QAAZ,CAAqB,MAArB,IAA+B,OAAnC,EAA4C;AACxC,WAAK,MAAL,CAAY,QAAZ,CAAqB,OAArB,IAAgC,IAAhC;AACA;AACH,KAfoC,CAiBrC;;;AACA,SAAK,MAAL,CAAY,QAAZ,CAAqB,MAArB,CAA4B,OAA5B,EAAqC,CAArC,EAAwC,IAAxC;AACH;AAED;;;;;;;;AAMO,SAAO,CAAC,SAAD,EAAuC,WAAW,GAAG,KAArD,EAA0D;AACpE,QAAI,WAAJ,EAAiB;AACb,WAAK,KAAL,GAAa,SAAS,CAAC,IAAD,CAAtB;AACH,KAHmE,CAKpE;AACA;AACA;;;AAEA,SAAK,IAAI,CAAC,GAAG,CAAR,EAAW,CAAC,GAAG,KAAK,QAAL,CAAc,MAAlC,EAA0C,CAAC,GAAG,CAA9C,EAAiD,CAAC,EAAlD,EAAsD;AAClD,UAAI,KAAK,GAAG,KAAK,QAAL,CAAc,CAAd,CAAZ;;AAEA,UAAI,KAAJ,EAAW;AACP,aAAK,CAAC,KAAN,GAAc,SAAS,CAAC,KAAD,CAAvB;AACA,aAAK,CAAC,OAAN,CAAc,SAAd;AACH;AACJ;AACJ;;AA5Oe;;AAApB,0B;;;;;;;;;;;;;;;;;;ACPA;;AAEA,MAAM,SAAS,GAAG,OAAlB;AAEA;;;;;;;;AAOA,kBAAe,CAAC,UAAD,EAAqB,MAArB,KAA4C;AACvD,MAAI;AAAE;AAAF,MAAY,MAAhB;;AAEA,MAAI,KAAJ,EAAW;AACP,UAAM,cAAc,GAAG,CAAC,UAAD,EAAa,SAAb,EAAwB,IAAxB,CAA6B,GAA7B,CAAvB;AACA,UAAM,WAAW,GAAG,kBAAQ,KAAR,EAA8B,cAA9B,CAApB;AACA,UAAM,IAAI,GAAa,kCAAwB,cAAxB,CAAvB;AAEA,UAAM,CAAC,MAAP,CAAc,WAAd,EAA2B;AACvB;AADuB,KAA3B;AAGH;;AAED,SAAO,MAAP;AACH,CAdD,C;;;;;;;;;;;;;;;;;;ACZA;;AAAS;;AACT;;AAAS;;AACT;;AAAS,kC;;;;;;;;;;;;;;;;;;ACDT;;AACA;AAGA;;;;;;;AAKa,sBAAc,CAAC,GAAD,EAAc,MAAd,KAAkD;AACzE,iCAAqB,OAArB,CAA6B,CAAC,IAAD,EAAe,GAAf,KAAyE;AAClG,QAAI,MAAJ,EAAY;AACR,YAAM,GAAG,GAAG,CAAC,GAAD,EAAM,MAAN,CAAZ;AACH;AACJ,GAJD;AAMA,SAAO,MAAP;AACH,CARY;AAWb;;;;;;;;AAMA,kBAAe,CAAC,SAAD,EAAoB,MAApB,KAA2C;AACtD,MAAI,IAAI,GAAa,kCAAwB,SAAxB,EAAmC,KAAnC,CAArB;AAAA,MACI,GAAG,GAAG,sBAAY,SAAZ,CADV;AAAA,MAEI,aAAa,GAAG,oBAAY,SAAZ,EAAuB,MAAvB,CAFpB;AAAA,MAGI,qBAAqB,GAAG,KAH5B;AAAA,MAII,WAAW,GAAQ,EAJvB,CADsD,CAOtD;;AACA,uBAAqB,GAAG,6BAAmB,GAAnB,CAAuB,SAAvB,CAAxB;;AACA,MAAI,qBAAJ,EAA2B;AACvB,eAAW,GAAG,6BAAmB,GAAnB,CAAuB,SAAvB,CAAd;AACH,GAXqD,CAatD;;;AACA,MAAI,qBAAqB,IAAI,WAAW,CAAC,UAAzC,EAAqD;AACjD,WAAO,aAAa,IAAI,MAAxB;AACH;;AAED,MAAI,CAAC,GAAL,EAAU;AACN,OAAG,GAAG,MAAM,CAAC,GAAP,IAAc,EAApB;AACH;;AAED,MAAI,MAAM,CAAC,GAAP,IAAc,MAAM,CAAC,IAAzB,EAA+B;AAC3B,gCAAkB,GAAlB,CAAsB,MAAM,CAAC,GAA7B,EAAkC,MAAM,CAAC,IAAzC;AACH,GAxBqD,CA0BtD;;;AACA,+BAAmB,GAAnB,CACI,SADJ,EAEI,MAAM,CAAC,MAAP,CAAc,WAAd,EAA2B,aAAa,IAAI,MAA5C,EAAoD;AAChD,QADgD;AAEhD,cAAU,EAAE;AAFoC,GAApD,CAFJ,EA3BsD,CAkCtD;;AACA,8BAAkB,GAAlB,CAAsB,CAAC,GAAD,EAAM,MAAN,CAAa,IAAb,EAAmB,IAAnB,CAAwB,GAAxB,CAAtB,EAAoD,SAApD;AAEA,SAAO,aAAa,IAAI,MAAxB;AACH,CAtCD,C;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;;AAEA,sF,CACA;;;AAEA,MAAM,GAAG,GAAG,YAAZ;AAEA;;;;;;;;AAOA,kBAAe,CAAC,SAAD,EAAoB,MAApB,KAA2C;AACtD,QAAM;AAAE,cAAF;AAAc,YAAQ,GAAG,EAAzB;AAA6B;AAA7B,MAAsC,MAA5C;;AAEA,MAAI,UAAU,IAAI,CAAC,IAAnB,EAAyB;AACrB,UAAM,CAAC,IAAP,CAAY,UAAZ,EAAwB,OAAxB,CAAiC,GAAD,IAAgB;AAC5C,UAAI,CAAC,GAAD,EAAM,OAAN,EAAe,OAAf,CAAuB,GAAvB,KAA+B,CAAnC,EAAsC;AAClC;AACA;AACA;AAEA,4BAAU,KAAV,EAAiB,GAAG,GAAG,uBAAvB;AAEA;AACH;;AAED,UAAI,CAAC,UAAD,IAAe,CAAC,UAAU,CAAC,GAAD,CAA9B,EAAqC;AACjC;AACH;;AAED,YAAM,CAAC,MAAP,CAAc,UAAU,CAAC,GAAD,CAAxB,EAA+B;AAC3B,kBAAU,EAAE,QAAQ,CAAC,OAAT,CAAiB,GAAjB,KAAyB;AADV,OAA/B;AAIA,YAAM,WAAW,GAAG,kBAAQ,UAAU,CAAC,GAAD,CAAlB,EAAwC,CAAC,SAAD,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,IAAtB,CAA2B,GAA3B,CAAxC,CAApB;AAAA,YACI,IAAI,GAAa,kCAAwB,CAAC,SAAD,EAAY,GAAZ,EAAiB,GAAjB,EAAsB,IAAtB,CAA2B,GAA3B,CAAxB,CADrB;AAGA,YAAM,CAAC,MAAP,CAAc,WAAd,EAA2B;AACvB;AADuB,OAA3B;AAGH,KAzBD;AA0BH;;AAED,SAAO,MAAP;AACH,CAjCD,C;;;;;;;;;;;;;;;;;ACfA;;;;AAGa,yBAAiB,MAAM,CAAC,SAAP,CAAiB,cAAlC;AAEb;;;;AAGa,mBAAW,MAAM,CAAC,SAAP,CAAiB,QAA5B;;AAEb,SAAgB,MAAhB,CAAuB,KAAvB,EAAiC;AAChC,MAAI,SAAS,KAAb,EAAoB;AACnB,WAAO,MAAP;AACA;;AAED,MAAI,IAAI,GAAG,OAAO,KAAlB;;AAEA,MAAI,gBAAgB,IAAhB,IAAwB,aAAa,IAAzC,EAA+C;AAC9C,WAAO,IAAP;AACA;;AAED,MAAI,UAAU,GAAG,iBAAS,IAAT,CAAc,KAAd,CAAjB;;AACA,UAAQ,UAAR;AACC,SAAK,gBAAL;AACC,aAAO,OAAP;;AACD,SAAK,eAAL;AACC,aAAO,MAAP;;AACD,SAAK,kBAAL;AACC,aAAO,SAAP;;AACD,SAAK,iBAAL;AACC,aAAO,QAAP;;AACD,SAAK,mBAAL;AACC,aAAO,UAAP;;AACD,SAAK,iBAAL;AACC,aAAO,QAAP;;AACD,SAAK,iBAAL;AACC,UAAI,SAAS,KAAK,KAAK,CAAC,QAAxB,EAAkC;AACjC,YAAI,MAAM,KAAK,CAAC,QAAhB,EAA0B;AACzB,iBAAO,KAAK,IAAL,CAAU,KAAK,CAAC,SAAhB,IAA6B,UAA7B,GAA0C,YAAjD;AACA,SAFD,MAEO;AACN,iBAAO,SAAP;AACA;AACD,OAND,MAMO;AACN,eAAO,QAAP;AACA;;AACF;AACC,aAAO,QAAP;AAxBF;AA0BA;;AAtCD;AAwCA;;;;;;AAKa,mBAAY,CAAD,IAAoB;AAC3C,SAAO,MAAM,CAAC,CAAD,CAAN,KAAc,QAArB;AACA,CAFY;AAIb;;;;;;;AAKa,mBAAY,CAAD,IAAoB;AAC3C,SAAO,MAAM,CAAC,CAAD,CAAN,KAAc,QAArB;AACA,CAFY;AAIb;;;;;;;AAKa,kBAAW,CAAD,IAAoB;AAC1C,SAAO,MAAM,CAAC,CAAD,CAAN,KAAc,OAArB;AACA,CAFY;AAIb;;;;;;;;;AAOa,oBAAY,CAAC,UAAD,EAAuB,YAAsB,EAA7C,KAA6D;AACrF,QAAM,cAAc,GAAG,CAAC,GAAG,SAAJ,CAAvB;AACA,QAAM,IAAI,GAAG,UAAU,CAAC,OAAX,GAAqB,GAArB,CAA0B,GAAD,IAAgB;AACrD,QAAI,GAAG,KAAK,GAAZ,EAAiB;AAChB,YAAM,KAAK,GAAG,cAAc,CAAC,GAAf,EAAd;AAEA,aAAO,CAAC,OAAO,KAAP,KAAiB,WAAjB,GAA+B,EAA/B,GAAoC,KAArC,EAA4C,QAA5C,EAAP;AACA;;AAED,WAAO,GAAP;AACA,GARY,CAAb;AAUA,MAAI,CAAC,OAAL;AAEA,SAAO,IAAP;AACA,CAfY,C","file":"index.dev.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.ts\");\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","import { JSONSchema6 } from \"json-schema\";\n\nimport { BaseFactory } from \"../libs/factory\";\nimport { FxJsonSchema } from \"../models/jsonschema\";\n\n/**\n * JsonSchema工厂\n */\nexport const schemaFieldFactory = new BaseFactory<FxJsonSchema>();\n/**\n * 关键字工厂\n */\nexport const schemaKeyWordFactory = new BaseFactory<($id: string, schema: JSONSchema6) => JSONSchema6>();\n/**\n * 类型工厂\n */\nexport const schemaTypeFactory = new BaseFactory<($id: string, schema: JSONSchema6) => JSONSchema6>();\n/**\n * \n * 存放jsonkey与schemaPath的对应关系\n */\nexport const schemaKeysFactory = new BaseFactory<string>();","export * from \"./factory\";","import {ref, oneof, anyof, definitions} from \"./keywords\";\nimport {array, normal, object} from \"./types\";\nimport {schemaFieldFactory, schemaKeyWordFactory, schemaTypeFactory, schemaKeysFactory} from \"./factory\";\n\nexport * from \"./models\";\nexport * from \"./libs\";\nexport {typeOf, isArray, isString, isNumber, mergeKeys} from \"./utils\";\n\nschemaKeyWordFactory.add(\"definitions\", definitions)\n    .add(\"oneof\", oneof)\n    .add(\"anyof\", anyof)\n    .add(\"ref\", ref);\n\nschemaTypeFactory.add(\"array\", array)\n    .add(\"normal\", normal)\n    // .add(\"undefined\", none)\n    // .add(\"number\", none)\n    // .add(\"null\", none)\n    // .add(\"any\", none)\n    // .add(\"integer\", none)\n    // .add(\"boolean\", none)\n    .add(\"object\", object);\n\nexport {\n    schemaKeysFactory,\n    schemaFieldFactory,\n    schemaKeyWordFactory,\n    schemaTypeFactory\n};\n","import {JSONSchema6, JSONSchema6Definition} from \"json-schema\";\n\nimport {resolve, getSchemaId} from \"../libs/resolve\";\nimport {isArray} from \"../utils\";\n\n/**\n * 解析schema中的关键字 oneOf\n * 如果发现有oneOf关键字，遍历替换成schema\n * @param  {string}      $id    当前的schema的ID\n * @param  {JSONSchema6} schema 当前的schema\n * @return {JSONSchema6}        处理过后的schema\n */\nconst anyOf = ($id: string, schema: JSONSchema6): JSONSchema6 => {\n    const {anyOf} = schema;\n\n    if (anyOf && isArray(anyOf)) {\n        schema.anyOf = anyOf.map((schemaOfOne: JSONSchema6Definition) => {\n            return resolve(schemaOfOne as JSONSchema6, schema.$id || getSchemaId(schema.$ref || \"\") ? undefined : getSchemaId($id));\n        });\n    }\n\n    return schema;\n};\n\nexport default anyOf;","import {JSONSchema6} from \"json-schema\";\n\nimport {resolve} from \"../libs/resolve\";\nimport {isBoolean} from \"util\";\n\n/**\n * 解析schema中的关键字 definitions\n * 如果发现有definitions关键字，解析schema\n * @param  {string}      $id    当前的schema的ID\n * @param  {JSONSchema6} schema 当前的schema\n * @return {JSONSchema6}        处理过后的schema\n */\nconst defined = (_$id: string, schema: JSONSchema6): JSONSchema6 => {\n    const definitions = schema.definitions;\n\n    if (!definitions) {\n        return schema;\n    }\n\n    for (const key in definitions) {\n        if (definitions.hasOwnProperty(key)) {\n            const element: JSONSchema6 | boolean = definitions[key];\n\n            if (!isBoolean(element)) {\n                // tslint:disable-next-line:no-unused-expression\n                resolve(element, `${schema.$id}#/definitions/${key}`);\n            }\n        }\n    }\n\n    return schema;\n};\n\nexport default defined;","export { default as ref } from \"./ref\";\nexport { default as oneof } from \"./oneof\";\nexport { default as anyof } from \"./anyof\";\nexport { default as definitions } from \"./defined\";\n","import {JSONSchema6, JSONSchema6Definition} from \"json-schema\";\n\nimport {resolve} from \"../libs/resolve\";\nimport {isArray} from \"../utils\";\n\n/**\n * 解析schema中的关键字 oneOf\n * 如果发现有oneOf关键字，遍历替换成schema\n * @param  {string}      $id    当前的schema的ID\n * @param  {JSONSchema6} schema 当前的schema\n * @return {JSONSchema6}        处理过后的schema\n */\nexport default (_$id: string, schema: JSONSchema6): JSONSchema6 => {\n    const oneOf = schema.oneOf;\n\n    if (oneOf && isArray(oneOf)) {\n        schema.oneOf = oneOf.map((schemaOfOne: JSONSchema6Definition) => {\n            return resolve(schemaOfOne as JSONSchema6);\n        });\n    }\n\n    return schema;\n};\n","import { JSONSchema6 } from \"json-schema\";\nimport invariant from \"invariant\";\n\nimport { getDataKeysBySchemaKeys, getSchemaId } from \"../libs/resolve\";\nimport { schemaFieldFactory } from \"../factory\";\nimport { FxJsonSchema } from \"../models/jsonschema\";\n\n/**\n * 解析schema中的关键字 $ref\n * 1. 获取$ref的id\n * 2. 重新定义$id = $id + $ref, 赋值给$ref\n * 3. 解析schema\n * @param  {string}      $id    当前的schema的ID\n * @param  {JSONSchema6} schema 当前的schema\n * @return {JSONSchema6}        处理过后的schema\n */\nexport default ($id: string, schema: JSONSchema6) => {\n    if (schema && schema.$ref) {\n        const schemaId = getSchemaId(schema.$ref);\n        let refName = schema.$ref;\n\n        if (schema.$id) {\n            refName = schema.$id + schema.$ref;\n        } else if (!schemaId) {\n            refName = getSchemaId($id) + schema.$ref;\n        }\n\n        schema.$ref = refName;\n\n        if (!schemaFieldFactory.has(refName)) {\n            schemaFieldFactory.add(refName, {});\n        }\n\n        const refSchema: FxJsonSchema = schemaFieldFactory.get(refName);\n\n        if (refSchema) {\n            let schemaAjv = Object.assign({}, refSchema) as JSONSchema6;\n\n            schemaAjv.$ref = refName;\n\n            Reflect.deleteProperty(schemaAjv, \"$id\");\n            Object.assign(schemaAjv, {\n                refKeys: getDataKeysBySchemaKeys(refName)\n            });\n\n            return schemaAjv;\n        }\n\n        invariant(false, `${refName} not exist.`);\n    }\n\n    return schema;\n};\n","/**\n * @file 工厂类\n */\n\nimport {hasOwnProperty} from \"../utils\";\n\n/**\n * 工厂类\n * @class\n */\nexport class BaseFactory<T> {\n    /**\n     * 用来存放工厂实例\n     * @protected\n     * @type {{ [id: string]: T; }}\n     * @memberof BaseFactory\n     */\n    protected store: {[id: string]: T;} = {};\n    /**\n     * 用来存放被锁定工厂实例\n     * @private\n     * @type {{ [id: string]: T; }}\n     * @memberof BaseFactory\n     */\n    private _lock: {[id: string]: boolean;} = {};\n\n    /**\n     * 添加一个实例\n     * @param {string} name 实例的名称\n     * @param {T} instance  实例\n     * @param {boolean} [override=false] 是否覆盖\n     * @returns {BaseFactory<T>} 是否添加成功\n     * @memberof BaseFactory\n     * @example\n     * \n     * this.add(\"key\", true);\n     */\n    public add(name: string, instance: T, override = false): BaseFactory<T> {\n        if (hasOwnProperty.call(this._lock, name) || (this.has(name) && !override)) {\n            return this;\n        }\n\n        this.store[name] = instance;\n\n        return this;\n    }\n\n    /**\n     * 是否存在key值\n     * @param {string} key key值\n     * @returns {boolean} 是否存在\n     * @memberof BaseFactory\n     */\n    public has(key: string): boolean {\n        return hasOwnProperty.call(this.store, key);\n    }\n\n    /**\n     * 获取一个实例\n     * @param {string} key  实例标志\n     * @returns {T}         返回当前key对应的实例\n     * @memberof BaseFactory\n     */\n    public get(key: string): T {\n        if (this.has(key)) {\n            return this.store[key];\n        }\n\n        return null as any;\n    }\n\n    /**\n     * 锁定实例,锁定后不能删除和覆盖\n     * @param {string} key  key\n     * @memberof BaseFactory\n     */\n    public lock(key: string): void {\n        if (this.has(key)) {\n            this._lock[key] = true;\n        }\n    }\n\n    /**\n     * 解锁实例\n     * @param {string} key  key\n     * @memberof BaseFactory\n     */\n    public unLock(key: string): void {\n        if (this.has(key)) {\n            Reflect.deleteProperty(this._lock, key);\n        }\n    }\n\n    /**\n     * 遍历所有的元素\n     * @param {(key: string, val: T) => any} func 遍历方法\n     * @returns {void}\n     * @memberof BaseFactory\n     */\n    public forEach(func: (key: string, val: T) => any): void {\n        if (!func) {\n            return;\n        }\n\n        for (const key in this.store) {\n            const element = this.store[key];\n\n            if (func(key, element) === false) {\n                break;\n            }\n        }\n    }\n\n    /**\n     * 清空当前的hash\n     * @memberof BaseFactory\n     */\n    public clear(): void {\n        this.store = {};\n        this._lock = {};\n    }\n}\n","export * from \"./tree\";\nexport * from \"./merge\";\nexport * from \"./resolve\";\nexport * from \"./factory\";\n","import invariant from \"invariant\";\n\nimport {UiSchema} from \"../models/uischema\";\nimport {schemaFieldFactory, schemaKeysFactory} from \"../factory\";\nimport {getDataKeysBySchemaKeys, getSchemaId} from \"./resolve\";\nimport {FxJsonSchema} from \"../models/jsonschema\";\n\n/**\n* 根据给出的parentKeys和uiSchemaKeys来获取uiSchema的key\n* 1. 遍历uiSchemaKeys，分别于parentKeys做合并\n* 2. 合并后的keys去仓库里面找，如果为找到则报错\n* 3. 判断找到的schema中是否带有 $ref\n* 4. 如果有$ref，则更改parentKeys为$ref的路径\n* 5. 如果没有，则更改parentKeys为当前合并的keys\n* @param  {String[]} uiSchemaKeys      当前的keys\n* @param  {String} parentSchemaPath    父亲的schemaPath\n* @return {String}                     返回的key\n*/\nconst getUiSchemaKeyRecursion = (uiSchemaKeys: string[], parentSchemaPath: string): string => {\n    let parentKeysWithDef = getDataKeysBySchemaKeys(parentSchemaPath, true);\n\n    while (uiSchemaKeys.length) {\n        const key: string = uiSchemaKeys.shift() || \"\";\n\n        parentKeysWithDef = parentKeysWithDef.concat(key ? [key] : []);\n\n        const keysStr: string = parentKeysWithDef.join(\"/\").replace(/\\/$/, \"\");\n\n        if (!schemaKeysFactory.has(keysStr)) {\n            // if (!isProd) {\n            //     // console.log(schemaFieldFactory, schemaKeysFactory);\n            //     warn(`${keysStr} did not found.`);\n            // }\n\n            invariant(false, `${keysStr} did not found.`);\n\n            return \"\";\n        }\n\n        const schema: FxJsonSchema = schemaFieldFactory.get(schemaKeysFactory.get(keysStr));\n\n        if (schema.$ref) {\n            parentKeysWithDef = getDataKeysBySchemaKeys(schema.$ref, true);\n        }\n    }\n\n    return parentKeysWithDef.join(\"/\");\n};\n/**\n  * 获取父亲的keys\n  * @param  {UiSchema}               parent 父亲schema\n  * @return {Array<string | number>}\n  */\nconst getParentSchemaKeys = (parent?: UiSchema): Array<string | number> => {\n    if (parent && parent.keys) {\n        return parent.keys;\n    }\n\n    return [];\n};\n\n/**\n * 获取当前uiSchema的key\n * 如果没有父亲节点\n * 默认返回父亲的key+当前uiSchema的key\n * @param  {UiSchema} parent      父亲schema\n * @param  {string}   schemaPath  schema的路径\n * @param  {UiSchema} uiSchema    uiSchma\n * @return {String}               返回的key\n */\nconst getCurrentSchemaKey = (parent: UiSchema | undefined, schemaPath: string, uiSchema: UiSchema): string => {\n    const $id = getSchemaId(schemaPath);\n    let uiSchemaKeys = uiSchema.key.split(\"/\");\n\n    // 如果父亲节点的shcemaId不是传入的schemaId，则不使用父亲的key做计算\n    if (parent && getSchemaId(parent.key) === $id) {\n        return getUiSchemaKeyRecursion(uiSchemaKeys, parent.schemaPath || \"\");\n    }\n\n    // const keys = getDataKeysBySchemaKeys(schemaPath, true);\n    // console.log(\"计算得出的keys\", $id, schemaPath, getDataKeysBySchemaKeys(schemaPath), getDataKeysBySchemaKeys(schemaPath, true));\n\n    // keys.pop();\n\n    return getUiSchemaKeyRecursion(uiSchemaKeys, schemaPath);\n};\n\n/**\n * 如果在【schemaKeysFactory】中没有发现uiSchema.key,则报错\n * 从【schemaKeysFactory】获取对应的schema，与uiSchema合并之后返回\n * @param  {UiSchema} uiSchema uiSchema\n * @return {UiSchema}          返回uiSchema\n */\nconst mergeUiSchemaToArray = (uiSchema: UiSchema): UiSchema => {\n    if (!schemaKeysFactory.has(uiSchema.key)) {\n        // if (!isProd) {\n        //     console.log(schemaKeysFactory);\n        //     warn(`${uiSchema.key} did not found. do you forget to resolve schema first.`);\n        // }\n\n        invariant(false, `${uiSchema.key} did not found. do you forget to resolve schema first.`);\n\n        return uiSchema;\n    }\n\n    const schemaKey: string = schemaKeysFactory.get(uiSchema.key);\n    const schema = schemaFieldFactory.get(schemaKey);\n\n    return Object.assign({}, schema, uiSchema);\n};\n\n/**\n * 初始化uiSchema\n * 如果是字符串；用$id合并之后，获取schema\n * 如果是【UiSchema】；合并key之后，获取schema\n * @param  {UiSchema} parent      父亲schema\n * @param  {string}   schemaPath  schema的路径\n * @param  {UiSchema} uiSchema    uiSchma\n * @return {UiSchema}            返回uiSchema\n */\nconst initUiSchema = (parent: UiSchema | undefined, schemaPath: string, uiSchema: UiSchema): UiSchema => {\n    let parentKeys = getParentSchemaKeys(parent),\n        key = getCurrentSchemaKey(parent, schemaPath, uiSchema),\n        keys,\n        isRequired = false,\n        originSchema: FxJsonSchema = {},\n        schemaKey;\n\n    keys = parentKeys.concat(uiSchema.key ? uiSchema.key.split(\"/\") : []);\n\n    // if (parent.type === \"object\" && parent.required) {\n    //     const keys1 = keys.concat([]);\n\n    //     isRequired = parent.required.indexOf((keys1.pop() || \"\").toString()) >= 0;\n    // }\n\n    if (schemaKeysFactory.has(key)) {\n        schemaKey = schemaKeysFactory.get(key);\n        if (schemaFieldFactory.has(schemaKey)) {\n            originSchema = schemaFieldFactory.get(schemaKey);\n            // isRequired = originSchema.isRequired;\n        }\n    }\n\n    return Object.assign({isRequired}, originSchema, uiSchema, {\n        key,\n        keys\n    });\n};\n\n/**\n * 合并后的数据添加到数组中去\n * 这里因为可以使用*,所有拆成了前面和后面以及*三个部分\n * @param  {UiSchema[]} uiSchemasFirst 前面部分\n * @param  {UiSchema[]} uiSchemasLast  后面部分\n * @param  {UiSchema}   uiSchema       需要处理的uiSchema\n * @return {Void}\n */\nconst pushMergeResult = (uiSchemasFirst: UiSchema[], uiSchemasLast: UiSchema[], uiSchema: UiSchema): void => {\n    if (\n        !uiSchemasFirst.concat(uiSchemasLast).filter((val: UiSchema) => {\n            return val.key === uiSchema.key;\n        }).length\n    ) {\n        uiSchema = mergeUiSchemaToArray(uiSchema);\n        uiSchemasFirst.push(uiSchema);\n    }\n};\n\n/**\n * 合并uiSchema\n * 1. 先判断uiSchema中是否存在*\n * 2. 如果没有*号，则遍历uiSchema，合并数据\n * 3. 如果存在*号；先合并*之前和*之后的uiSchema\n * 4. 遍历当前的schema：\n *    如果是object，则遍历properties，然后合并数据\n *    如果是array，则直接返回items，然后合并数据\n * @param  {UiSchema}                    parent      父亲的uiSchema\n * @param  {string}                      schemaPath  当前的schema路径\n * @param  {Array<UiSchema | string>}    uiSchemas   全部的uiSchemas\n * @param  {FxJsonSchema}                curSchema   当前的Schema\n * @return {UiSchema[]}                              合并后的uiSchemas\n */\n// tslint:disable-next-line:max-line-length\nconst initMergeSchema = (parent: UiSchema | undefined, schemaPath: string, uiSchemas: Array<UiSchema | string>, curSchema: FxJsonSchema): UiSchema[] => {\n    let idx: number = uiSchemas.indexOf(\"*\"),\n        uiSchemasFirst: UiSchema[] = [],\n        uiSchemasLast: UiSchema[] = [],\n        types = [\"object\", \"array\"];\n\n    // 如果存在多个*，则报错\n    if (uiSchemas.lastIndexOf(\"*\") !== idx) {\n        // if (!isProd) {\n        //     // throw new Error(\"uiSchema can only has one *.\");\n        //     warn(\"uiSchema can only has one *.\");\n        // }\n\n        invariant(false, \"uiSchema can only has one *.\");\n\n        return [];\n    }\n\n    // 不存在*号的情况\n    if (idx < 0) {\n        uiSchemas.slice(idx + 1).map((us: string | UiSchema) => {\n            let uiSchema = initUiSchema(parent, schemaPath, us.constructor === String ? {key: us} as UiSchema : us as UiSchema);\n\n            uiSchemasFirst.push(mergeUiSchemaToArray(uiSchema));\n        });\n\n        return uiSchemasFirst;\n    }\n\n    // 处理*之前的数据\n    uiSchemas.slice(0, idx).forEach((us: string | UiSchema) => {\n        let uiSchema = initUiSchema(parent, curSchema.schemaPath || schemaPath, us.constructor === String ? {key: us} as UiSchema : us as UiSchema);\n\n        uiSchemasFirst.push(mergeUiSchemaToArray(uiSchema));\n    });\n\n    // 处理*之后的数据\n    uiSchemas.slice(idx + 1).forEach((us: string | UiSchema) => {\n        let uiSchema = initUiSchema(parent, curSchema.schemaPath || schemaPath, us.constructor === String ? {key: us} as UiSchema : us as UiSchema);\n\n        uiSchemasLast.push(mergeUiSchemaToArray(uiSchema));\n    });\n\n    // 如果是object类型，遍历properties属性，与之前的数据去重后添加到数组\n    if (curSchema.type === types[0] && curSchema.properties) {\n        Object.keys(curSchema.properties).forEach((us: string) => {\n            const uiSchema = initUiSchema(parent, curSchema.schemaPath || schemaPath, {\n                key: us,\n                isRequired: curSchema.required ? curSchema.required.indexOf(us) >= 0 : false\n            } as UiSchema);\n\n            pushMergeResult(uiSchemasFirst, uiSchemasLast, uiSchema);\n        });\n    }\n\n    // 如果是数组，获取下一级的key，然后做对比处理\n    if (curSchema.type === types[1] && curSchema.items) {\n        const uiSchema = initUiSchema(parent, curSchema.schemaPath || schemaPath, {\n            key: \"-\"\n        });\n\n        pushMergeResult(uiSchemasFirst, uiSchemasLast, uiSchema);\n    }\n\n    // 是普通对象\n    if (types.indexOf(curSchema.type as string) < 0) {\n        let uiSchema = initUiSchema(parent, schemaPath, {\n            key: getDataKeysBySchemaKeys(curSchema.schemaPath || \"\", false).join(\"/\")\n        });\n\n        pushMergeResult(uiSchemasFirst, uiSchemasLast, uiSchema);\n    }\n\n    return uiSchemasFirst.concat(uiSchemasLast);\n};\n\n/**\n * 用来转换uiSchema的类, 如果有$ref，则直接使用\n * @param schemaPath {String}                     schema的路径\n * @param parent     {UiSchema}                   父scehma\n * @param uiSchemas  {Array<UiSchema | string>}   需要合并的uiSchemas\n */\nexport const merge = (schemaPath: string, parent?: UiSchema, uiSchemas?: Array<UiSchema | string>): UiSchema[] => {\n    // 获取schemaPath对应的schemaId\n    let keyPath: string = getDataKeysBySchemaKeys(schemaPath, true).join(\"/\");\n\n    // 如果keyPath还没有解析，则报错\n    if (!schemaKeysFactory.has(keyPath)) {\n        // if (!isProd) {\n        //     warn(`${keyPath} not exist or ${keyPath} did not resolve yet.`);\n        // }\n\n        invariant(false, `${keyPath} not exist or ${keyPath} did not resolve yet.`);\n\n        return [];\n    }\n\n    // 获取当前的schemaField\n    const curSchema = schemaFieldFactory.get(schemaKeysFactory.get(keyPath));\n\n    // 去掉$id这个字段\n    if (curSchema.$id) {\n        if (!curSchema.$ref) {\n            curSchema.$ref = curSchema.$id;\n        }\n        curSchema.$id = undefined;\n        delete curSchema.$id;\n    }\n\n    // 合并schema\n    return initMergeSchema(parent, schemaPath, uiSchemas || [\"*\"], curSchema);\n}\n","import {JSONSchema6} from \"json-schema\";\nimport invariant from \"invariant\";\n\nimport {schemaTypeFactory} from \"../factory\";\nimport {isString} from \"../utils\";\n\n/**\n* schema路径解析\n* 把schemaPath解析成JsonPath\n* 1. 去掉properties，items关键字转换成【 - 】\n* 2. 第一个字符去掉末尾的【 # 】\n* @example design#/properties/appType => [\"appType']\n* @example design#/properties/appType/type => [\"appType','type']\n* @example design#/properties/appType/items/properties/type => [\"appType', '-', 'type']\n* @param   {String}    schemaPath schemaPath\n* @param   {Boolean}   keepFirst  是否需要保留schemaId\n* @returns {String[]}             返回数据路径数组\n*/\nconst getDataKeysBySchemaKeys = (schemaPath: string, keepFirst = false): string[] => {\n    const regexp = /#$/g;\n\n    return schemaPath.split(\"/\").map((key: string, index: number) => {\n        // 第一个替换末尾的#\n        if (index === 0 && regexp.test(key)) {\n            // 这里是regexp的陷阱,需要修改lastIndex = 0\n            // 对于同一个正则表达式对象regex，不能重复调用：第一次返回true，第二次就返回false，很显然这种效果不是我们想要的。\n            // 这是因为RegExp.test()方法，第一次从位置0开始查找，可以匹配；第二次的查找位置就不是0了，说以就不能匹配了。\n            regexp.lastIndex = 0;\n\n            return keepFirst ? key.replace(regexp, \"\") : null;\n        }\n\n        // 去掉properties\n        if (key === \"properties\") {\n            return null;\n        }\n\n        // 转换items成-\n        if (key === \"items\") {\n            return \"-\";\n        }\n\n        return key;\n    }).filter((key: string | null) => {\n        return key !== null;\n    }) as string[];\n};\n\n/**\n* 从schemaPath中获取$id\n* @param   {String} schemaPath schemaPath\n* @returns {String}\n*/\nconst getSchemaId = (schemaPath: string): string => {\n    const keys = schemaPath.split(\"/\");\n    const regexp = /#$/g;\n\n    if (!keys.length) {\n        // invariant(false, `${schemaPath} not a valid schemaPath.`);\n        return \"\";\n    }\n\n    // if(!regexp.test(keys[0])){\n    //     invariant(false, `can not find schemaId`);\n    //     return \"\";\n    // }\n\n    return keys[0].replace(regexp, \"\");\n};\n\n\n/**\n* 初始化schema\n* 1. 判断$id，如果不存在，报错\n* 2. 验证schema的结构是否正确，不正确报错\n* @param   {JSONSchema6}  schema  schema\n* @returns {JSONSchema6}          处理完成的schema\n*/\nconst initSchema = (schema: JSONSchema6): JSONSchema6 => {\n    let $id: string | undefined = schema.$id;\n\n    // 如果没有$id, 同时没有$ref的情况下直接报错\n    if (!$id && !schema.$ref) {\n        invariant(false, \"id is required\");\n        return schema;\n    }\n\n    return schema;\n}\n\n/**\n * TODO\n * 遍历schema，生成map\n * 1. 如果schema.type不是string，报错\n * 2. 调用【schemaTypeFactory\n * @param {JSONSchema6} schema  schema\n * @param {String}      $id     id\n */\nconst compileSchema = ($id: string, schema: JSONSchema6): JSONSchema6 => {\n    if (!schemaTypeFactory.has(\"normal\")) {\n        return schema;\n    }\n\n    const id = $id || (schema.$id || \"\") + \"#\";\n    let schemaGenera = schemaTypeFactory.get(\"normal\")(id, schema);\n\n    // 如果不存在type，但是$ref则直接返回\n    if (!schema.type || schema.$ref) {\n        return schemaGenera;\n    }\n\n    // 这里只解析type为字符串的结构，不支持数组类型的type\n    if (!isString(schema.type)) {\n        invariant(false, `schema type[${schema.type}] can only be string.`);\n        return schemaGenera;\n    }\n\n    const type: string = schema.type.toString();\n\n    // 这里调用相对应的type的方法，来解析schema\n    if (schemaTypeFactory.has(type) && [\"array\", \"object\"].indexOf(type) >= 0) {\n        schemaGenera = schemaTypeFactory.get(type)(id, schema);\n    }\n\n    return schemaGenera;\n}\n\n/**\n * 解析schema\n * @param  {JSONSchema6}   schema      需要处理的JsonSchema\n * @param  {String}        $id         JsonSchema 的id\n * @returns {JSONSchema6}              返回处理过后的JsonSchema\n */\nconst resolve = (schema: JSONSchema6, $id = \"\"): JSONSchema6 => {\n    const schemaGenera = !$id ? initSchema(schema) : schema;\n    const id = $id || schema.$ref || \"\";\n\n    // 生成map\n    return compileSchema(id, schemaGenera);\n}\n\nexport {\n    getDataKeysBySchemaKeys,\n    getSchemaId,\n    resolve\n}","import {isNumber} from \"../utils\";\n\nexport type Tsn = string | number;\n\n/**\n * tree map struct\n * 这里用来记录数据的元数据信息\n * 元数据信息包括，isValid，isLoading，isShow，...etc\n */\nexport class TreeMap<T> {\n    public children: TreeMap<T>[] = [];\n\n    /**\n      * 构造函数\n      * @param   {String}  key    当前节点的key\n      * @param   {any}     value  当前节点的值\n      * @param   {TreeMap<T>} parent 当前节点的父亲节点\n      * @returns {Void}\n      */\n    constructor(private key: string, public value: any, public readonly parent?: TreeMap<T>) {}\n\n    /**\n    * 添加一个子元素\n    * @param    {Array<Tsn>} keys  节点的路径，遍历keys来动态创建节点 example [\"root\",\"b\"]  root -> b\n    * @param    {any}        value 孩子的数据\n    * @returns  {TreeMap<T>}\n    */\n    public addChild(keys: Array<Tsn>, value?: any): TreeMap<T> {\n        let curNode: TreeMap<T> = this;\n        let child: TreeMap<T> | null = null;\n\n        if (!keys.length) {\n            return this;\n        }\n\n        for (const key of keys) {\n            child = curNode.contains(key);\n\n            // 如果是数字的话，则说明是数组，key改成`-`\n            // 如果不是数组的话，则无所谓顺序，直接push就行\n            // 如果是数组，则要保证顺序和数据的下标一致\n            if (!child) {\n                if (isNumber(key)) {\n                    child = new TreeMap<T>(\"-\", null, curNode);\n                    curNode.children[key as number] = child;\n                } else {\n                    child = new TreeMap<T>(key.toString(), null, curNode);\n                    curNode.children.push(child);\n                }\n            }\n\n            curNode = child;\n        }\n\n        // if (child) {\n        (child as TreeMap<T>).value = value;\n        // }\n\n        return child as TreeMap<T>;\n    }\n\n    /**\n   * 获取当前的key\n   * 如果key是`-`,代表是数组，则转换成数组下标\n   * time complexity = O(1) / Constant\n   * @returns string\n   */\n    public getKey(): string {\n        if (!this.key || this.key === \"-\") {\n            return this.getIndexInParent().toString();\n        }\n\n        return this.key;\n    }\n\n    /**\n   * 获取当前节点的keys路径\n   * time complexity = O(1) / Constant\n   * @returns {string[]}\n   */\n    public getCurrentKeys(): Array<Tsn> {\n        let keys: Array<Tsn> = [];\n\n        if (this.parent) {\n            keys = keys.concat(this.parent.getCurrentKeys());\n        }\n\n        return keys.concat([this.key]);\n    }\n\n    /**\n    * 获取当前节点在父节点中的下标索引\n    * time complexity = O(1) / Constant\n    * @returns {number}\n    */\n    public getIndexInParent(): number {\n        let index = -1;\n\n        if (!this.parent) {\n            return index;\n        }\n\n        const {children} = this.parent;\n\n        for (let i = 0, n = children.length; i < n; i++) {\n            const child = children[i];\n\n            if (child && child === this) {\n                index = i;\n                break;\n            }\n        }\n\n        return index;\n    }\n\n    /**\n    * 从当前节点查找是否存在节点\n    * time complexity = O(n) / Linear\n    * @param   {Tsn}     key 节点的数据\n    * @returns {TreeMap<T>}\n    */\n    public contains(key: Tsn): TreeMap<T> | null {\n        // 如果是数字的话，直接返回children中对应下标的元素\n        if (isNumber(key)) {\n            if (this.children.length <= key) {\n                return null;\n            }\n\n            let child = this.children[key as number];\n\n            if (!child) {\n                this.children[key as number] = new TreeMap<T>(\"-\", null, this);\n\n                child = this.children[key as number];\n            }\n\n            return child;\n        }\n\n        // 如果当前节点的key===要搜索的key，则返回本身\n        if (this.getKey() === key) {\n            return this;\n        }\n\n        // 如果没有children，则返回空\n        if (!this.children || this.children.length === 0) {\n            return null;\n        }\n        // 遍历子节点，层层递归，直到找到\n        for (let i = 0; i < this.children.length; i++) {\n            const child = this.children[i];\n\n            if (child && child.contains(key)) {\n                return child;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n    * 根据给定的路径数组，返回对应的节点\n    * time complexity = O(n) / Linear\n    * @param   {Array<Tsn>}    keys路径\n    * @returns {TreeMap<T> | null}\n    */\n    public containPath(keys: Array<Tsn>): TreeMap<T> | null {\n        let node: TreeMap<T> | null = this;\n\n        for (const key of keys) {\n            node = node.contains(key);\n\n            if (!node) {\n                break;\n            }\n        }\n\n        return node;\n    }\n\n    /**\n    * 从父亲节点中删除当前节点\n    * time complexity = O(n) / Linear\n    */\n    public removeFromParent(): void {\n        const index = this.getIndexInParent();\n\n        if (!this.parent) {\n            return;\n        }\n\n        this.parent.children.splice(index, 1);\n    }\n\n    /**\n    * 移动到某个位置\n    * time complexity = O(1) / Linear\n    * @param   {Number} toIndex 需要移动到的位置\n    * @returns {Void}\n    */\n    public insertToFromParent(toIndex: number): void {\n        let curIndex = this.getIndexInParent();\n\n        // 如果没有父亲，或者父亲没有子节点，或者当前位置小于0\n        if (!this.parent || !this.parent.children || curIndex < 0) {\n            return;\n        }\n\n        // 父亲节点中删除当前元素\n        this.removeFromParent();\n\n        // 如果超出了父亲的子节点数量，添加一个\n        if (this.parent.children.length <= toIndex) {\n            this.parent.children[toIndex] = this;\n            return;\n        }\n\n        // 将当前节点插入到指定的位置\n        this.parent.children.splice(toIndex, 0, this);\n    }\n\n    /**\n    * 遍历指定节点下所有子节点的value数据,当前节点不计算在内\n    * @param   {(node: TreeMap<T>) => any}     clearFunc      map方法\n    * @param   {Boolean}                    currentNode    是否包含当前节点\n    * @returns {Void}\n    */\n    public forEach(clearFunc: (node: TreeMap<T>) => any, currentNode = false) {\n        if (currentNode) {\n            this.value = clearFunc(this);\n        }\n\n        // if (!this.children.length) {\n        //     return;\n        // }\n\n        for (let i = 0, n = this.children.length; i < n; i++) {\n            let child = this.children[i];\n\n            if (child) {\n                child.value = clearFunc(child);\n                child.forEach(clearFunc);\n            }\n        }\n    }\n}\n","import { JSONSchema6 } from \"json-schema\";\n\nimport { resolve, getDataKeysBySchemaKeys } from \"../libs/resolve\";\n\nconst itemsName = \"items\";\n\n/**\n * 解析schema中的type=array的结构\n * 如果存在items,则继续解析schema.item\n * @param  {JSONSchema6} schema    当前的schema\n * @param  {String}      schemaPath 当前的schemaPath ,example \"a#/properties/b/properties/c\"\n * @return {JSONSchema6}           返回处理过后的schema,example \"{title:'21',$id:'a'}\"\n */\nexport default (schemaPath: string, schema: JSONSchema6) => {\n    let { items } = schema;\n\n    if (items) {\n        const itemSchemaPath = [schemaPath, itemsName].join(\"/\");\n        const mergeSchema = resolve(items as JSONSchema6, itemSchemaPath);\n        const keys: string[] = getDataKeysBySchemaKeys(itemSchemaPath);\n\n        Object.assign(mergeSchema, {\n            keys\n        });\n    }\n\n    return schema;\n};\n","\nexport { default as array } from \"./array\";\nexport { default as object } from \"./object\";\nexport { default as normal } from \"./normal\";\n","import { JSONSchema6 } from \"json-schema\";\n\nimport { schemaFieldFactory, schemaKeysFactory, schemaKeyWordFactory } from \"../factory\";\nimport { getDataKeysBySchemaKeys, getSchemaId } from \"../libs/resolve\";\n\n\n/**\n * 遍历所有的keyword，解析schema\n * @param   {JSONSchema6} schema schema\n * @returns {JSONSchema6}        解析过后的schema\n */\nexport const convertKeys = ($id: string, schema: JSONSchema6): JSONSchema6 => {\n    schemaKeyWordFactory.forEach((_key: string, val: ($id: string, schema: JSONSchema6) => JSONSchema6) => {\n        if (schema) {\n            schema = val($id, schema);\n        }\n    });\n\n    return schema;\n};\n\n\n/**\n * 解析schema中的type!=array && type!=object的结构\n * @param  {JSONSchema6} schema    当前的schema\n * @param  {String}      schemaKey 当前的schemaKey\n * @return {JSONSchema6}           返回处理过后的schema\n */\nexport default (schemaKey: string, schema: JSONSchema6) => {\n    let keys: string[] = getDataKeysBySchemaKeys(schemaKey, false),\n        $id = getSchemaId(schemaKey),\n        currentSchema = convertKeys(schemaKey, schema),\n        alreadyHasEmptySchema = false,\n        emptySchema: any = {};\n\n    // 先从缓存中提取schema，如果存在的话\n    alreadyHasEmptySchema = schemaFieldFactory.has(schemaKey);\n    if (alreadyHasEmptySchema) {\n        emptySchema = schemaFieldFactory.get(schemaKey);\n    }\n\n    // 如果已经存在，则直接返回\n    if (alreadyHasEmptySchema && emptySchema.schemaPath) {\n        return currentSchema || schema;\n    }\n\n    if (!$id) {\n        $id = schema.$id || \"\";\n    }\n\n    if (schema.$id && schema.$ref) {\n        schemaKeysFactory.add(schema.$id, schema.$ref);\n    }\n\n    // 将当前获取的schema加入到schemaFieldFactory中\n    schemaFieldFactory.add(\n        schemaKey,\n        Object.assign(emptySchema, currentSchema || schema, {\n            keys,\n            schemaPath: schemaKey\n        })\n    );\n    // 加入key的索引\n    schemaKeysFactory.add([$id].concat(keys).join(\"/\"), schemaKey);\n\n    return currentSchema || schema;\n};\n","import { JSONSchema6 } from \"json-schema\";\nimport invariant from \"invariant\"\n\nimport { resolve, getDataKeysBySchemaKeys } from \"../libs/resolve\";\n// import {warn, isProd} from \"../utils\";\n\nconst pro = \"properties\";\n\n/**\n * 解析schema中的type=object的结构\n * 如果存在schema.properties,则遍历properties，继续解析schema.properties[key]\n * @param  {JSONSchema6} schema    当前的schema\n * @param  {String}      schemaKey 当前的schemaKey\n * @return {JSONSchema6}           返回处理过后的schema\n */\nexport default (schemaKey: string, schema: JSONSchema6) => {\n    const { properties, required = [], $ref } = schema;\n\n    if (properties && !$ref) {\n        Object.keys(properties).forEach((key: string) => {\n            if ([pro, \"items\"].indexOf(key) >= 0) {\n                // if (!isProd) {\n                //     warn(`${key}can not be key words.`);\n                // }\n\n                invariant(false, `${key}can not be key words.`);\n\n                return;\n            }\n\n            if (!properties || !properties[key]) {\n                return;\n            }\n\n            Object.assign(properties[key], {\n                isRequired: required.indexOf(key) >= 0\n            });\n\n            const mergeSchema = resolve(properties[key] as JSONSchema6, [schemaKey, pro, key].join(\"/\")),\n                keys: string[] = getDataKeysBySchemaKeys([schemaKey, pro, key].join(\"/\"));\n\n            Object.assign(mergeSchema, {\n                keys\n            });\n        });\n    }\n\n    return schema;\n};\n","/**\n * 暴露hasOwnProperty方法\n */\nexport const hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * 暴露toString方法\n */\nexport const toString = Object.prototype.toString;\n\nexport function typeOf(value: any) {\n\tif (null === value) {\n\t\treturn \"null\";\n\t}\n\n\tlet type = typeof value;\n\n\tif (\"undefined\" === type || \"string\" === type) {\n\t\treturn type;\n\t}\n\n\tlet typeString = toString.call(value);\n\tswitch (typeString) {\n\t\tcase \"[object Array]\":\n\t\t\treturn \"array\";\n\t\tcase \"[object Date]\":\n\t\t\treturn \"date\";\n\t\tcase \"[object Boolean]\":\n\t\t\treturn \"boolean\";\n\t\tcase \"[object Number]\":\n\t\t\treturn \"number\";\n\t\tcase \"[object Function]\":\n\t\t\treturn \"function\";\n\t\tcase \"[object RegExp]\":\n\t\t\treturn \"regexp\";\n\t\tcase \"[object Object]\":\n\t\t\tif (undefined !== value.nodeType) {\n\t\t\t\tif (3 === value.nodeType) {\n\t\t\t\t\treturn /\\S/.test(value.nodeValue) ? \"textnode\" : \"whitespace\";\n\t\t\t\t} else {\n\t\t\t\t\treturn \"element\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn \"object\";\n\t\t\t}\n\t\tdefault:\n\t\t\treturn \"unknow\";\n\t}\n}\n\n/**\n * 判断参数是不是数字\n * @param   {Any}      n    需要验证的参数\n * @returns {Boolean}\n */\nexport const isNumber = (n: any): boolean => {\n\treturn typeOf(n) === \"number\";\n};\n\n/**\n * 判断参数是不是字符串\n * @param   {Any}      n    需要验证的参数\n * @returns {Boolean}\n */\nexport const isString = (n: any): boolean => {\n\treturn typeOf(n) === \"string\";\n};\n\n/**\n * 判断参数是不是boolean\n * @param   {Any}      n    需要验证的参数\n * @returns {Boolean}\n */\nexport const isArray = (n: any): boolean => {\n\treturn typeOf(n) === \"array\";\n};\n\n/**\n * 解析keys\n * 1. 遍历keys中的元素，如果遇到-，则替换成数字\n * @param   {string[]} originKeys 需要做替换的数据路径\n * @param   {string[]} indexList  当前传递过来的indexList\n * @returns {string[]}\n */\nexport const mergeKeys = (originKeys: string[], indexList: number[] = []): string[] => {\n\tconst arrayLevelCopy = [...indexList];\n\tconst keys = originKeys.reverse().map((key: string) => {\n\t\tif (key === \"-\") {\n\t\t\tconst index = arrayLevelCopy.pop();\n\n\t\t\treturn (typeof index === \"undefined\" ? \"\" : index).toString();\n\t\t}\n\n\t\treturn key;\n\t});\n\n\tkeys.reverse();\n\n\treturn keys;\n};\n"],"sourceRoot":""}