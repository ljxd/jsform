{"version":3,"sources":["webpack://JSFCORE/webpack/universalModuleDefinition","webpack://JSFCORE/webpack/bootstrap","webpack://JSFCORE/./src/libs/resolve.ts","webpack://JSFCORE/./src/utils/index.ts","webpack://JSFCORE/./src/factory/index.ts","webpack://JSFCORE/./node_modules/invariant/browser.js","webpack://JSFCORE/./src/libs/factory.ts","webpack://JSFCORE/./src/libs/merge.ts","webpack://JSFCORE/./src/libs/tree.ts","webpack://JSFCORE/./src/libs/index.ts","webpack://JSFCORE/./src/types/normal.ts","webpack://JSFCORE/./src/types/object.ts","webpack://JSFCORE/./src/types/array.ts","webpack://JSFCORE/./src/types/index.ts","webpack://JSFCORE/(webpack)/node_modules/inherits/inherits_browser.js","webpack://JSFCORE/(webpack)/node_modules/util/support/isBufferBrowser.js","webpack://JSFCORE/(webpack)/node_modules/process/browser.js","webpack://JSFCORE/(webpack)/buildin/global.js","webpack://JSFCORE/(webpack)/node_modules/util/util.js","webpack://JSFCORE/./src/keywords/defined.ts","webpack://JSFCORE/./src/keywords/anyof.ts","webpack://JSFCORE/./src/keywords/oneof.ts","webpack://JSFCORE/./src/factory/factory.ts","webpack://JSFCORE/./src/keywords/ref.ts","webpack://JSFCORE/./src/keywords/index.ts","webpack://JSFCORE/./src/index.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","invariant_1","__importDefault","factory_1","utils_1","getDataKeysBySchemaKeys","schemaPath","keepFirst","regexp","split","map","index","test","lastIndex","replace","filter","getSchemaId","keys","length","schema","resolve","$id","schemaGenera","$ref","default","schemaTypeFactory","has","id","type","isString","toString","indexOf","compileSchema","typeOf","undefined","nodeType","nodeValue","isNumber","isArray","mergeKeys","originKeys","indexList","arrayLevelCopy","reverse","pop","__export","condition","format","a","b","e","f","error","Error","args","argIndex","framesToPop","BaseFactory","[object Object]","this","store","_lock","instance","override","Reflect","deleteProperty","func","resolve_1","getUiSchemaKeyRecursion","uiSchemaKeys","parentSchemaPath","parentKeysWithDef","shift","keysStr","concat","join","schemaKeysFactory","schemaFieldFactory","mergeUiSchemaToArray","uiSchema","schemaKey","assign","initUiSchema","parent","parentKeys","getParentSchemaKeys","getCurrentSchemaKey","originSchema","isRequired","pushMergeResult","uiSchemasFirst","uiSchemasLast","val","push","merge","uiSchemas","keyPath","curSchema","idx","types","lastIndexOf","slice","us","constructor","String","forEach","properties","required","items","initMergeSchema","TreeMap","children","curNode","child","contains","getIndexInParent","getCurrentKeys","getKey","node","splice","toIndex","curIndex","removeFromParent","clearFunc","currentNode","convertKeys","schemaKeyWordFactory","_key","currentSchema","alreadyHasEmptySchema","emptySchema","add","pro","mergeSchema","itemsName","itemSchemaPath","array_1","array","object_1","normal_1","normal","ctor","superCtor","super_","writable","configurable","TempCtor","arg","copy","fill","readUInt8","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","defaultClearTimeout","runTimeout","fun","setTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","marker","runClearTimeout","Item","noop","nextTick","Array","arguments","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","g","Function","eval","global","formatRegExp","objects","inspect","str","x","Number","JSON","stringify","_","isNull","isObject","deprecate","fn","msg","isUndefined","noDeprecation","warned","throwDeprecation","traceDeprecation","console","trace","debugEnviron","debugs","obj","opts","ctx","seen","stylize","stylizeNoColor","depth","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","style","styles","recurseTimes","isFunction","ret","primitive","simple","formatPrimitive","visibleKeys","hash","arrayToHash","getOwnPropertyNames","isError","formatError","isRegExp","RegExp","isDate","Date","output","base","braces","toUTCString","formatProperty","match","formatArray","reduce","prev","cur","numLinesEst","reduceToSingleString","desc","getOwnPropertyDescriptor","set","line","substr","ar","re","objectToString","pad","debuglog","NODE_ENV","NODE_DEBUG","toUpperCase","pid","bold","italic","underline","inverse","white","grey","black","blue","cyan","green","magenta","red","yellow","special","number","boolean","null","string","date","isNullOrUndefined","isSymbol","isPrimitive","isBuffer","months","prop","log","time","getHours","getMinutes","getSeconds","getDate","getMonth","inherits","origin","util_1","_$id","definitions","element","anyOf","schemaOfOne","oneOf","schemaId","refName","refSchema","schemaAjv","refKeys","ref_1","ref","oneof_1","oneof","anyof_1","anyof","defined_1","keywords_1","types_1"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,UAAAH,GACA,iBAAAC,QACAA,QAAA,QAAAD,IAEAD,EAAA,QAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAT,YAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA0DA,OArDAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAtB,GACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,EAAAuB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,EAAA,cAAiDyB,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAhC,GACA,IAAAe,EAAAf,KAAA2B,WACA,WAA2B,OAAA3B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,wKCjFA,MAAAC,EAAAC,EAAAnC,EAAA,IAEAoC,EAAApC,EAAA,GACAqC,EAAArC,EAAA,GA0IIN,EAAA4C,wBA5H4B,EAACC,EAAoBC,GAAY,KAC7D,MAAMC,EAAS,MAEf,OAAOF,EAAWG,MAAM,KAAKC,IAAI,CAAClB,EAAamB,IAE7B,IAAVA,GAAeH,EAAOI,KAAKpB,IAI3BgB,EAAOK,UAAY,EAEZN,EAAYf,EAAIsB,QAAQN,EAAQ,IAAM,MAIrC,eAARhB,EACO,KAIC,UAARA,EACO,IAGJA,GACRuB,OAAQvB,GACQ,OAARA,KAmGX/B,EAAAuD,YA1FiBV,KACjB,MAAMW,EAAOX,EAAWG,MAAM,KAG9B,OAAKQ,EAAKC,OAUHD,EAAK,GAAGH,QAZA,MAYgB,IARpB,KAmBKK,MAkEhB1D,EAAA2D,QAXY,EAACD,EAAqBE,EAAM,MACxC,MAAMC,EAAgBD,EAA2BF,GAxDjCA,EAwDuBA,GAvDFE,KAGxBF,EAAOI,KAKbJ,GAJHlB,EAAAuB,SAAU,EAAO,kBACVL,GAsDX,MAxCkB,EAACE,EAAaF,KAChC,IAAKhB,EAAAsB,kBAAkBC,IAAI,UACvB,OAAOP,EAGX,MAAMQ,EAAKN,IAAQF,EAAOE,KAAO,IAAM,IACvC,IAAIC,EAAenB,EAAAsB,kBAAkB3C,IAAI,SAAtBqB,CAAgCwB,EAAIR,GAGvD,IAAKA,EAAOS,MAAQT,EAAOI,KACvB,OAAOD,EAIX,IAAKlB,EAAAyB,SAASV,EAAOS,MAEjB,OADA3B,EAAAuB,SAAU,iBAAsBL,EAAOS,6BAChCN,EAGX,MAAMM,EAAeT,EAAOS,KAAKE,WAOjC,OAJI3B,EAAAsB,kBAAkBC,IAAIE,KAAU,QAAS,UAAUG,QAAQH,IAAS,IACpEN,EAAenB,EAAAsB,kBAAkB3C,IAAI8C,EAAtBzB,CAA4BwB,EAAIR,IAG5CG,GAcAU,CAHIX,GAAOF,EAAOI,MAAQ,GAGRD,mCChI7B,SAAgBW,EAAO/C,GACtB,GAAI,OAASA,EACZ,MAAO,OAGR,IAAI0C,SAAc1C,EAElB,GAAI,cAAgB0C,GAAQ,WAAaA,EACxC,OAAOA,EAIR,OADiBnE,EAAAqE,SAAS1D,KAAKc,IAE9B,IAAK,iBACJ,MAAO,QACR,IAAK,gBACJ,MAAO,OACR,IAAK,mBACJ,MAAO,UACR,IAAK,kBACJ,MAAO,SACR,IAAK,oBACJ,MAAO,WACR,IAAK,kBACJ,MAAO,SACR,IAAK,kBACJ,YAAIgD,IAAchD,EAAMiD,SACnB,IAAMjD,EAAMiD,SACR,KAAKvB,KAAK1B,EAAMkD,WAAa,WAAa,aAE1C,UAGD,SAET,QACC,MAAO,2DA3CG3E,EAAAqC,eAAiBnB,OAAOkB,UAAUC,eAKlCrC,EAAAqE,SAAWnD,OAAOkB,UAAUiC,SAEzCrE,EAAAwE,SA6CaxE,EAAA4E,SAAY3C,IACH,WAAduC,EAAOvC,IAQFjC,EAAAoE,SAAYnC,IACH,WAAduC,EAAOvC,IAQFjC,EAAA6E,QAAW5C,IACF,UAAduC,EAAOvC,IAUFjC,EAAA8E,UAAY,EAACC,EAAsBC,QAC/C,MAAMC,MAAqBD,GACrBxB,EAAOuB,EAAWG,UAAUjC,IAAKlB,IACtC,GAAY,MAARA,EAAa,CAChB,MAAMmB,EAAQ+B,EAAeE,MAE7B,YAAyB,IAAVjC,EAAwB,GAAKA,GAAOmB,WAGpD,OAAOtC,IAKR,OAFAyB,EAAK0B,UAEE1B,+IClGR4B,CAAA9E,EAAA,mCCgDAL,EAAAD,QA5BA,SAAAqF,EAAAC,EAAAC,EAAAC,EAAA3E,EAAAC,EAAA2E,EAAAC,GAOA,IAAAL,EAAA,CACA,IAAAM,EACA,QAAAlB,IAAAa,EACAK,EAAA,IAAAC,MACA,qIAGK,CACL,IAAAC,GAAAN,EAAAC,EAAA3E,EAAAC,EAAA2E,EAAAC,GACAI,EAAA,GACAH,EAAA,IAAAC,MACAN,EAAAjC,QAAA,iBAA0C,OAAAwC,EAAAC,SAE1C/E,KAAA,sBAIA,MADA4E,EAAAI,YAAA,EACAJ,mFCxCA,MAAAhD,EAAArC,EAAA,GAMAN,EAAAgG,kBAAAC,cAOcC,KAAAC,SAOFD,KAAAE,SAaDH,IAAIlF,EAAcsF,EAAaC,GAAW,GAC7C,OAAI3D,EAAAN,eAAe1B,KAAKuF,KAAKE,MAAOrF,IAAUmF,KAAKjC,IAAIlD,KAAUuF,EACtDJ,MAGXA,KAAKC,MAAMpF,GAAQsF,EAEZH,MASJD,IAAIlE,GACP,OAAOY,EAAAN,eAAe1B,KAAKuF,KAAKC,MAAOpE,GASpCkE,IAAIlE,GACP,OAAImE,KAAKjC,IAAIlC,GACFmE,KAAKC,MAAMpE,GAGf,KAQJkE,KAAKlE,GACJmE,KAAKjC,IAAIlC,KACTmE,KAAKE,MAAMrE,IAAO,GASnBkE,OAAOlE,GACNmE,KAAKjC,IAAIlC,IACTwE,QAAQC,eAAeN,KAAKE,MAAOrE,GAUpCkE,QAAQQ,GACX,GAAKA,EAIL,IAAK,MAAM1E,KAAOmE,KAAKC,MAGnB,IAA2B,IAAvBM,EAAK1E,EAFOmE,KAAKC,MAAMpE,IAGvB,MASLkE,QACHC,KAAKC,SACLD,KAAKE,8KCvHb,MAAA5D,EAAAC,EAAAnC,EAAA,IAGAoC,EAAApC,EAAA,GACAoG,EAAApG,EAAA,GAcMqG,EAA0B,CAACC,EAAwBC,KACrD,IAAIC,EAAoBJ,EAAA9D,wBAAwBiE,GAAkB,GAElE,KAAOD,EAAanD,QAAQ,CACxB,MAAM1B,EAAc6E,EAAaG,SAAW,GAItCC,GAFNF,EAAoBA,EAAkBG,OAAOlF,GAAOA,QAEVmF,KAAK,KAAK7D,QAAQ,MAAO,IAEnE,IAAKX,EAAAyE,kBAAkBlD,IAAI+C,GAQvB,OAFAxE,EAAAuB,SAAU,KAAUiD,oBAEb,GAGX,MAAMtD,EAAuBhB,EAAA0E,mBAAmB/F,IAAIqB,EAAAyE,kBAAkB9F,IAAI2F,IAEtEtD,EAAOI,OACPgD,EAAoBJ,EAAA9D,wBAAwBc,EAAOI,MAAM,IAIjE,OAAOgD,EAAkBI,KAAK,MA+C5BG,EAAwBC,IAC1B,IAAK5E,EAAAyE,kBAAkBlD,IAAIqD,EAASvF,KAQhC,OAFAS,EAAAuB,SAAU,KAAUuD,EAASvF,6DAEtBuF,EAGX,MAAMC,EAAoB7E,EAAAyE,kBAAkB9F,IAAIiG,EAASvF,KACnD2B,EAAShB,EAAA0E,mBAAmB/F,IAAIkG,GAEtC,OAAOrG,OAAOsG,UAAW9D,EAAQ4D,IAY/BG,EAAe,CAACC,EAA8B7E,EAAoByE,KACpE,IAEI9D,EAGA+D,EALAI,EApEqBD,IACrBA,GAAUA,EAAOlE,KACVkE,EAAOlE,QAkEDoE,CAAoBF,GACjC3F,EApDoB,EAAC2F,EAA8B7E,EAAoByE,KAC3E,MAAM1D,EAAM8C,EAAAnD,YAAYV,GACxB,IAAI+D,EAAeU,EAASvF,IAAIiB,MAAM,KAGtC,OAAI0E,GAAUhB,EAAAnD,YAAYmE,EAAO3F,OAAS6B,EAC/B+C,EAAwBC,EAAcc,EAAO7E,YAAc,IAQ/D8D,EAAwBC,EAAc/D,IAsCnCgF,CAAoBH,EAAQ7E,EAAYyE,GAG9CQ,KAmBJ,OAhBAtE,EAAOmE,EAAWV,OAAOK,EAASvF,IAAMuF,EAASvF,IAAIiB,MAAM,SAQvDN,EAAAyE,kBAAkBlD,IAAIlC,KACtBwF,EAAY7E,EAAAyE,kBAAkB9F,IAAIU,GAC9BW,EAAA0E,mBAAmBnD,IAAIsD,KACvBO,EAAepF,EAAA0E,mBAAmB/F,IAAIkG,KAKvCrG,OAAOsG,QAAQO,YApBL,GAoBkBD,EAAcR,GAC7CvF,MACAyB,UAYFwE,EAAkB,CAACC,EAA4BC,EAA2BZ,KAEvEW,EAAehB,OAAOiB,GAAe5E,OAAQ6E,GACnCA,EAAIpG,MAAQuF,EAASvF,KAC7B0B,SAEH6D,EAAWD,EAAqBC,GAChCW,EAAeG,KAAKd,KAqGftH,EAAAqI,MAAQ,EAACxF,EAAoB6E,EAAmBY,KAEzD,IAAIC,EAAkB7B,EAAA9D,wBAAwBC,GAAY,GAAMqE,KAAK,KAGrE,IAAKxE,EAAAyE,kBAAkBlD,IAAIsE,GAOvB,OAFA/F,EAAAuB,SAAU,KAAUwE,kBAAwBA,6BAMhD,MAAMC,EAAY9F,EAAA0E,mBAAmB/F,IAAIqB,EAAAyE,kBAAkB9F,IAAIkH,IAY/D,OATIC,EAAU5E,MACL4E,EAAU1E,OACX0E,EAAU1E,KAAO0E,EAAU5E,KAE/B4E,EAAU5E,SAAMa,SACT+D,EAAU5E,KA1GD,EAAC8D,EAA8B7E,EAAoByF,EAAqCE,KAC5G,IAAIC,EAAcH,EAAUhE,QAAQ,KAChC2D,KACAC,KACAQ,GAAS,SAAU,SAGvB,GAAIJ,EAAUK,YAAY,OAASF,EAQ/B,OAFAjG,EAAAuB,SAAU,EAAO,mCAMrB,GAAI0E,EAAM,EAON,OANAH,EAAUM,MAAMH,EAAM,GAAGxF,IAAK4F,IAC1B,IAAIvB,EAAWG,EAAaC,EAAQ7E,EAAYgG,EAAGC,cAAgBC,QAAUhH,IAAK8G,GAAkBA,GAEpGZ,EAAeG,KAAKf,EAAqBC,MAGtCW,EA8BX,GA1BAK,EAAUM,MAAM,EAAGH,GAAKO,QAASH,IAC7B,IAAIvB,EAAWG,EAAaC,EAAQc,EAAU3F,YAAcA,EAAYgG,EAAGC,cAAgBC,QAAUhH,IAAK8G,GAAkBA,GAE5HZ,EAAeG,KAAKf,EAAqBC,MAI7CgB,EAAUM,MAAMH,EAAM,GAAGO,QAASH,IAC9B,IAAIvB,EAAWG,EAAaC,EAAQc,EAAU3F,YAAcA,EAAYgG,EAAGC,cAAgBC,QAAUhH,IAAK8G,GAAkBA,GAE5HX,EAAcE,KAAKf,EAAqBC,MAIxCkB,EAAUrE,OAASuE,EAAM,IAAMF,EAAUS,YACzC/H,OAAOsC,KAAKgF,EAAUS,YAAYD,QAASH,IACvC,MAAMvB,EAAWG,EAAaC,EAAQc,EAAU3F,YAAcA,GAC1Dd,IAAK8G,EACLd,aAAYS,EAAUU,UAAWV,EAAUU,SAAS5E,QAAQuE,IAAO,IAGvEb,EAAgBC,EAAgBC,EAAeZ,KAKnDkB,EAAUrE,OAASuE,EAAM,IAAMF,EAAUW,MAAO,CAChD,MAAM7B,EAAWG,EAAaC,EAAQc,EAAU3F,YAAcA,GAC1Dd,IAAK,MAGTiG,EAAgBC,EAAgBC,EAAeZ,GAInD,GAAIoB,EAAMpE,QAAQkE,EAAUrE,MAAkB,EAAG,CAC7C,IAAImD,EAAWG,EAAaC,EAAQ7E,GAChCd,IAAK2E,EAAA9D,wBAAwB4F,EAAU3F,YAAc,IAAI,GAAOqE,KAAK,OAGzEc,EAAgBC,EAAgBC,EAAeZ,GAGnD,OAAOW,EAAehB,OAAOiB,IAqCtBkB,CAAgB1B,EAAQ7E,EAAYyF,IAAc,KAAME,oFCtSnE,MAAA7F,EAAArC,EAAA,SASa+I,EAUTpD,YAAoBlE,EAAoBN,EAA4BiG,GAAhDxB,KAAAnE,MAAoBmE,KAAAzE,QAA4ByE,KAAAwB,SAT7DxB,KAAAoD,YAiBArD,SAASzC,EAAkB/B,GAC9B,IAAI8H,EAAsBrD,KACtBsD,EAA2B,KAE/B,IAAKhG,EAAKC,OACN,OAAOyC,KAGX,IAAK,MAAMnE,KAAOyB,GACdgG,EAAQD,EAAQE,SAAS1H,MAMjBY,EAAAiC,SAAS7C,IACTyH,EAAQ,IAAIH,EAAW,IAAK,KAAME,GAClCA,EAAQD,SAASvH,GAAiByH,IAElCA,EAAQ,IAAIH,EAAWtH,EAAIsC,WAAY,KAAMkF,GAC7CA,EAAQD,SAASlB,KAAKoB,KAI9BD,EAAUC,EAOd,OAHCA,EAAqB/H,MAAQA,EAGvB+H,EASJvD,SACH,OAAKC,KAAKnE,KAAoB,MAAbmE,KAAKnE,IAIfmE,KAAKnE,IAHDmE,KAAKwD,mBAAmBrF,WAWhC4B,iBACH,IAAIzC,KAMJ,OAJI0C,KAAKwB,SACLlE,EAAOA,EAAKyD,OAAOf,KAAKwB,OAAOiC,mBAG5BnG,EAAKyD,QAAQf,KAAKnE,MAQtBkE,mBACH,IAAI/C,GAAS,EAEb,IAAKgD,KAAKwB,OACN,OAAOxE,EAGX,MAAMoG,SAACA,GAAYpD,KAAKwB,OAExB,IAAK,IAAIlH,EAAI,EAAGyB,EAAIqH,EAAS7F,OAAQjD,EAAIyB,EAAGzB,IAAK,CAC7C,MAAMgJ,EAAQF,EAAS9I,GAEvB,GAAIgJ,GAASA,IAAUtD,KAAM,CACzBhD,EAAQ1C,EACR,OAIR,OAAO0C,EASJ+C,SAASlE,GAEZ,GAAIY,EAAAiC,SAAS7C,GAAM,CACf,GAAImE,KAAKoD,SAAS7F,QAAU1B,EACxB,OAAO,KAGX,IAAIyH,EAAQtD,KAAKoD,SAASvH,GAQ1B,OANKyH,IACDtD,KAAKoD,SAASvH,GAAiB,IAAIsH,EAAW,IAAK,KAAMnD,MAEzDsD,EAAQtD,KAAKoD,SAASvH,IAGnByH,EAIX,GAAItD,KAAK0D,WAAa7H,EAClB,OAAOmE,KAIX,IAAKA,KAAKoD,UAAqC,IAAzBpD,KAAKoD,SAAS7F,OAChC,OAAO,KAGX,IAAK,IAAIjD,EAAI,EAAGA,EAAI0F,KAAKoD,SAAS7F,OAAQjD,IAAK,CAC3C,MAAMgJ,EAAQtD,KAAKoD,SAAS9I,GAE5B,GAAIgJ,GAASA,EAAMC,SAAS1H,GACxB,OAAOyH,EAIf,OAAO,KASJvD,YAAYzC,GACf,IAAIqG,EAA0B3D,KAE9B,IAAK,MAAMnE,KAAOyB,EAGd,KAFAqG,EAAOA,EAAKJ,SAAS1H,IAGjB,MAIR,OAAO8H,EAOJ5D,mBACH,MAAM/C,EAAQgD,KAAKwD,mBAEdxD,KAAKwB,QAIVxB,KAAKwB,OAAO4B,SAASQ,OAAO5G,EAAO,GAShC+C,mBAAmB8D,GACtB,IAAIC,EAAW9D,KAAKwD,oBAGfxD,KAAKwB,SAAWxB,KAAKwB,OAAO4B,UAAYU,EAAW,IAKxD9D,KAAK+D,mBAGD/D,KAAKwB,OAAO4B,SAAS7F,QAAUsG,EAC/B7D,KAAKwB,OAAO4B,SAASS,GAAW7D,KAKpCA,KAAKwB,OAAO4B,SAASQ,OAAOC,EAAS,EAAG7D,OASrCD,QAAQiE,EAAsCC,GAAc,GAC3DA,IACAjE,KAAKzE,MAAQyI,EAAUhE,OAO3B,IAAK,IAAI1F,EAAI,EAAGyB,EAAIiE,KAAKoD,SAAS7F,OAAQjD,EAAIyB,EAAGzB,IAAK,CAClD,IAAIgJ,EAAQtD,KAAKoD,SAAS9I,GAEtBgJ,IACAA,EAAM/H,MAAQyI,EAAUV,GACxBA,EAAMR,QAAQkB,MAzO9BlK,EAAAqJ,uJCTAjE,EAAA9E,EAAA,IACA8E,EAAA9E,EAAA,IACA8E,EAAA9E,EAAA,IACA8E,EAAA9E,EAAA,mFCDA,MAAAoC,EAAApC,EAAA,GACAoG,EAAApG,EAAA,GAQaN,EAAAoK,YAAc,EAACxG,EAAaF,KACrChB,EAAA2H,qBAAqBrB,QAAQ,CAACsB,EAAcnC,KACpCzE,IACAA,EAASyE,EAAIvE,EAAKF,MAInBA,IAUX1D,EAAA+D,QAAe,EAACwD,EAAmB7D,KAC/B,IAAIF,EAAiBkD,EAAA9D,wBAAwB2E,GAAW,GACpD3D,EAAM8C,EAAAnD,YAAYgE,GAClBgD,EAAgBvK,EAAAoK,YAAY7C,EAAW7D,GACvC8G,GAAwB,EACxBC,KASJ,OANAD,EAAwB9H,EAAA0E,mBAAmBnD,IAAIsD,MAE3CkD,EAAc/H,EAAA0E,mBAAmB/F,IAAIkG,IAIrCiD,GAAyBC,EAAY5H,WAC9B0H,GAAiB7G,GAGvBE,IACDA,EAAMF,EAAOE,KAAO,IAGpBF,EAAOE,KAAOF,EAAOI,MACrBpB,EAAAyE,kBAAkBuD,IAAIhH,EAAOE,IAAKF,EAAOI,MAI7CpB,EAAA0E,mBAAmBsD,IACfnD,EACArG,OAAOsG,OAAOiD,EAAaF,GAAiB7G,GACxCF,OACAX,WAAY0E,KAIpB7E,EAAAyE,kBAAkBuD,KAAK9G,GAAKqD,OAAOzD,GAAM0D,KAAK,KAAMK,GAE7CgD,GAAiB7G,wKChE5B,MAAAlB,EAAAC,EAAAnC,EAAA,IAEAoG,EAAApG,EAAA,GAGMqK,EAAM,aASZ3K,EAAA+D,QAAe,EAACwD,EAAmB7D,KAC/B,MAAMuF,WAAEA,EAAFC,SAAcA,KAAdpF,KAA6BA,GAASJ,EA+B5C,OA7BIuF,IAAenF,GACf5C,OAAOsC,KAAKyF,GAAYD,QAASjH,IAC7B,IAAK4I,EAAK,SAASrG,QAAQvC,IAAQ,EAO/B,YAFAS,EAAAuB,SAAU,KAAUhC,0BAKxB,IAAKkH,IAAeA,EAAWlH,GAC3B,OAGJb,OAAOsG,OAAOyB,EAAWlH,IACrBgG,WAAYmB,EAAS5E,QAAQvC,IAAQ,IAGzC,MAAM6I,EAAclE,EAAA/C,QAAQsF,EAAWlH,IAAsBwF,EAAWoD,EAAK5I,GAAKmF,KAAK,MACnF1D,EAAiBkD,EAAA9D,yBAAyB2E,EAAWoD,EAAK5I,GAAKmF,KAAK,MAExEhG,OAAOsG,OAAOoD,GACVpH,WAKLE,mFC7CX,MAAAgD,EAAApG,EAAA,GAEMuK,EAAY,QASlB7K,EAAA+D,QAAe,EAAClB,EAAoBa,KAChC,IAAIyF,MAAEA,GAAUzF,EAEhB,GAAIyF,EAAO,CACP,MAAM2B,GAAkBjI,EAAYgI,GAAW3D,KAAK,KAC9C0D,EAAclE,EAAA/C,QAAQwF,EAAsB2B,GAC5CtH,EAAiBkD,EAAA9D,wBAAwBkI,GAE/C5J,OAAOsG,OAAOoD,GACVpH,SAIR,OAAOE,mFCzBX,IAAAqH,EAAAzK,EAAA,IAASN,EAAAgL,MAAAD,EAAAhH,QACT,IAAAkH,EAAA3K,EAAA,GAASN,EAAAkC,OAAA+I,EAAAlH,QACT,IAAAmH,EAAA5K,EAAA,GAASN,EAAAmL,OAAAD,EAAAnH,uBCHT,mBAAA7C,OAAAY,OAEA7B,EAAAD,QAAA,SAAAoL,EAAAC,GACAD,EAAAE,OAAAD,EACAD,EAAAhJ,UAAAlB,OAAAY,OAAAuJ,EAAAjJ,WACA0G,aACArH,MAAA2J,EACAhK,YAAA,EACAmK,UAAA,EACAC,cAAA,MAMAvL,EAAAD,QAAA,SAAAoL,EAAAC,GACAD,EAAAE,OAAAD,EACA,IAAAI,EAAA,aACAA,EAAArJ,UAAAiJ,EAAAjJ,UACAgJ,EAAAhJ,UAAA,IAAAqJ,EACAL,EAAAhJ,UAAA0G,YAAAsC,kBCpBAnL,EAAAD,QAAA,SAAA0L,GACA,OAAAA,GAAA,iBAAAA,GACA,mBAAAA,EAAAC,MACA,mBAAAD,EAAAE,MACA,mBAAAF,EAAAG,0BCHA,IAOAC,EACAC,EARAC,EAAA/L,EAAAD,WAUA,SAAAiM,IACA,UAAArG,MAAA,mCAEA,SAAAsG,IACA,UAAAtG,MAAA,qCAsBA,SAAAuG,EAAAC,GACA,GAAAN,IAAAO,WAEA,OAAAA,WAAAD,EAAA,GAGA,IAAAN,IAAAG,IAAAH,IAAAO,WAEA,OADAP,EAAAO,WACAA,WAAAD,EAAA,GAEA,IAEA,OAAAN,EAAAM,EAAA,GACK,MAAA3G,GACL,IAEA,OAAAqG,EAAAnL,KAAA,KAAAyL,EAAA,GACS,MAAA3G,GAET,OAAAqG,EAAAnL,KAAAuF,KAAAkG,EAAA,MAvCA,WACA,IAEAN,EADA,mBAAAO,WACAA,WAEAJ,EAEK,MAAAxG,GACLqG,EAAAG,EAEA,IAEAF,EADA,mBAAAO,aACAA,aAEAJ,EAEK,MAAAzG,GACLsG,EAAAG,GAjBA,GAwEA,IAEAK,EAFAC,KACAC,GAAA,EAEAC,GAAA,EAEA,SAAAC,IACAF,GAAAF,IAGAE,GAAA,EACAF,EAAA9I,OACA+I,EAAAD,EAAAtF,OAAAuF,GAEAE,GAAA,EAEAF,EAAA/I,QACAmJ,KAIA,SAAAA,IACA,IAAAH,EAAA,CAGA,IAAAI,EAAAV,EAAAQ,GACAF,GAAA,EAGA,IADA,IAAAK,EAAAN,EAAA/I,OACAqJ,GAAA,CAGA,IAFAP,EAAAC,EACAA,OACAE,EAAAI,GACAP,GACAA,EAAAG,GAAAK,MAGAL,GAAA,EACAI,EAAAN,EAAA/I,OAEA8I,EAAA,KACAE,GAAA,EAnEA,SAAAO,GACA,GAAAjB,IAAAO,aAEA,OAAAA,aAAAU,GAGA,IAAAjB,IAAAG,IAAAH,IAAAO,aAEA,OADAP,EAAAO,aACAA,aAAAU,GAEA,IAEAjB,EAAAiB,GACK,MAAAvH,GACL,IAEA,OAAAsG,EAAApL,KAAA,KAAAqM,GACS,MAAAvH,GAGT,OAAAsG,EAAApL,KAAAuF,KAAA8G,KAgDAC,CAAAJ,IAiBA,SAAAK,EAAAd,EAAApB,GACA9E,KAAAkG,MACAlG,KAAA8E,QAYA,SAAAmC,KA5BAnB,EAAAoB,SAAA,SAAAhB,GACA,IAAAvG,EAAA,IAAAwH,MAAAC,UAAA7J,OAAA,GACA,GAAA6J,UAAA7J,OAAA,EACA,QAAAjD,EAAA,EAAuBA,EAAA8M,UAAA7J,OAAsBjD,IAC7CqF,EAAArF,EAAA,GAAA8M,UAAA9M,GAGAgM,EAAApE,KAAA,IAAA8E,EAAAd,EAAAvG,IACA,IAAA2G,EAAA/I,QAAAgJ,GACAN,EAAAS,IASAM,EAAA9K,UAAA2K,IAAA,WACA7G,KAAAkG,IAAAmB,MAAA,KAAArH,KAAA8E,QAEAgB,EAAAwB,MAAA,UACAxB,EAAAyB,SAAA,EACAzB,EAAA0B,OACA1B,EAAA2B,QACA3B,EAAA4B,QAAA,GACA5B,EAAA6B,YAIA7B,EAAA8B,GAAAX,EACAnB,EAAA+B,YAAAZ,EACAnB,EAAAgC,KAAAb,EACAnB,EAAAiC,IAAAd,EACAnB,EAAAkC,eAAAf,EACAnB,EAAAmC,mBAAAhB,EACAnB,EAAAoC,KAAAjB,EACAnB,EAAAqC,gBAAAlB,EACAnB,EAAAsC,oBAAAnB,EAEAnB,EAAAuC,UAAA,SAAAxN,GAAqC,UAErCiL,EAAAwC,QAAA,SAAAzN,GACA,UAAA6E,MAAA,qCAGAoG,EAAAyC,IAAA,WAA2B,WAC3BzC,EAAA0C,MAAA,SAAAC,GACA,UAAA/I,MAAA,mCAEAoG,EAAA4C,MAAA,WAA4B,yBCvL5B,IAAAC,EAGAA,EAAA,WACA,OAAA3I,KADA,GAIA,IAEA2I,KAAAC,SAAA,cAAAA,KAAA,EAAAC,MAAA,QACC,MAAAtJ,GAED,iBAAArF,SAAAyO,EAAAzO,QAOAH,EAAAD,QAAA6O,oBCnBA,SAAAG,EAAAhD,GAqBA,IAAAiD,EAAA,WACAjP,EAAAsF,OAAA,SAAAI,GACA,IAAAtB,EAAAsB,GAAA,CAEA,IADA,IAAAwJ,KACA1O,EAAA,EAAmBA,EAAA8M,UAAA7J,OAAsBjD,IACzC0O,EAAA9G,KAAA+G,EAAA7B,UAAA9M,KAEA,OAAA0O,EAAAhI,KAAA,KAGA1G,EAAA,EAmBA,IAnBA,IACAqF,EAAAyH,UACAR,EAAAjH,EAAApC,OACA2L,EAAArG,OAAArD,GAAArC,QAAA4L,EAAA,SAAAI,GACA,UAAAA,EAAA,UACA,GAAA7O,GAAAsM,EAAA,OAAAuC,EACA,OAAAA,GACA,gBAAAtG,OAAAlD,EAAArF,MACA,gBAAA8O,OAAAzJ,EAAArF,MACA,SACA,IACA,OAAA+O,KAAAC,UAAA3J,EAAArF,MACS,MAAAiP,GACT,mBAEA,QACA,OAAAJ,KAGAA,EAAAxJ,EAAArF,GAAuBA,EAAAsM,EAASuC,EAAAxJ,IAAArF,GAChCkP,EAAAL,KAAAM,EAAAN,GACAD,GAAA,IAAAC,EAEAD,GAAA,IAAAD,EAAAE,GAGA,OAAAD,GAOApP,EAAA4P,UAAA,SAAAC,EAAAC,GAEA,GAAAC,EAAAf,EAAAhD,SACA,kBACA,OAAAhM,EAAA4P,UAAAC,EAAAC,GAAAvC,MAAArH,KAAAoH,YAIA,QAAAtB,EAAAgE,cACA,OAAAH,EAGA,IAAAI,GAAA,EAeA,OAdA,WACA,IAAAA,EAAA,CACA,GAAAjE,EAAAkE,iBACA,UAAAtK,MAAAkK,GACO9D,EAAAmE,iBACPC,QAAAC,MAAAP,GAEAM,QAAAzK,MAAAmK,GAEAG,GAAA,EAEA,OAAAJ,EAAAtC,MAAArH,KAAAoH,aAOA,IACAgD,EADAC,KA6BA,SAAApB,EAAAqB,EAAAC,GAEA,IAAAC,GACAC,QACAC,QAAAC,GAkBA,OAfAvD,UAAA7J,QAAA,IAAAiN,EAAAI,MAAAxD,UAAA,IACAA,UAAA7J,QAAA,IAAAiN,EAAAK,OAAAzD,UAAA,IACA0D,EAAAP,GAEAC,EAAAO,WAAAR,EACGA,GAEHzQ,EAAAkR,QAAAR,EAAAD,GAGAV,EAAAW,EAAAO,cAAAP,EAAAO,YAAA,GACAlB,EAAAW,EAAAI,SAAAJ,EAAAI,MAAA,GACAf,EAAAW,EAAAK,UAAAL,EAAAK,QAAA,GACAhB,EAAAW,EAAAS,iBAAAT,EAAAS,eAAA,GACAT,EAAAK,SAAAL,EAAAE,QAAAQ,GACAC,EAAAX,EAAAF,EAAAE,EAAAI,OAoCA,SAAAM,EAAAhC,EAAAkC,GACA,IAAAC,EAAApC,EAAAqC,OAAAF,GAEA,OAAAC,EACA,KAAApC,EAAA4B,OAAAQ,GAAA,OAAAnC,EACA,KAAAD,EAAA4B,OAAAQ,GAAA,OAEAnC,EAKA,SAAAyB,EAAAzB,EAAAkC,GACA,OAAAlC,EAeA,SAAAiC,EAAAX,EAAAjP,EAAAgQ,GAGA,GAAAf,EAAAS,eACA1P,GACAiQ,EAAAjQ,EAAA0N,UAEA1N,EAAA0N,UAAAnP,EAAAmP,WAEA1N,EAAAqH,aAAArH,EAAAqH,YAAA1G,YAAAX,GAAA,CACA,IAAAkQ,EAAAlQ,EAAA0N,QAAAsC,EAAAf,GAIA,OAHAtM,EAAAuN,KACAA,EAAAN,EAAAX,EAAAiB,EAAAF,IAEAE,EAIA,IAAAC,EA+FA,SAAAlB,EAAAjP,GACA,GAAAsO,EAAAtO,GACA,OAAAiP,EAAAE,QAAA,yBACA,GAAAxM,EAAA3C,GAAA,CACA,IAAAoQ,EAAA,IAAAtC,KAAAC,UAAA/N,GAAA4B,QAAA,aACAA,QAAA,YACAA,QAAA,gBACA,OAAAqN,EAAAE,QAAAiB,EAAA,UAEA,GAAAjN,EAAAnD,GACA,OAAAiP,EAAAE,QAAA,GAAAnP,EAAA,UACA,GAAAuP,EAAAvP,GACA,OAAAiP,EAAAE,QAAA,GAAAnP,EAAA,WAEA,GAAAiO,EAAAjO,GACA,OAAAiP,EAAAE,QAAA,eA9GAkB,CAAApB,EAAAjP,GACA,GAAAmQ,EACA,OAAAA,EAIA,IAAApO,EAAAtC,OAAAsC,KAAA/B,GACAsQ,EApCA,SAAA/G,GACA,IAAAgH,KAMA,OAJAhH,EAAAhC,QAAA,SAAAb,EAAAM,GACAuJ,EAAA7J,IAAA,IAGA6J,EA6BAC,CAAAzO,GAQA,GANAkN,EAAAO,aACAzN,EAAAtC,OAAAgR,oBAAAzQ,IAKA0Q,EAAA1Q,KACA+B,EAAAc,QAAA,eAAAd,EAAAc,QAAA,mBACA,OAAA8N,EAAA3Q,GAIA,OAAA+B,EAAAC,OAAA,CACA,GAAAiO,EAAAjQ,GAAA,CACA,IAAAV,EAAAU,EAAAV,KAAA,KAAAU,EAAAV,KAAA,GACA,OAAA2P,EAAAE,QAAA,YAAA7P,EAAA,eAEA,GAAAsR,EAAA5Q,GACA,OAAAiP,EAAAE,QAAA0B,OAAAlQ,UAAAiC,SAAA1D,KAAAc,GAAA,UAEA,GAAA8Q,EAAA9Q,GACA,OAAAiP,EAAAE,QAAA4B,KAAApQ,UAAAiC,SAAA1D,KAAAc,GAAA,QAEA,GAAA0Q,EAAA1Q,GACA,OAAA2Q,EAAA3Q,GAIA,IA2CAgR,EA3CAC,EAAA,GAAA1H,GAAA,EAAA2H,GAAA,IAA4C,MAG5C9N,EAAApD,KACAuJ,GAAA,EACA2H,GAAA,UAIAjB,EAAAjQ,MAEAiR,EAAA,cADAjR,EAAAV,KAAA,KAAAU,EAAAV,KAAA,IACA,KAkBA,OAdAsR,EAAA5Q,KACAiR,EAAA,IAAAJ,OAAAlQ,UAAAiC,SAAA1D,KAAAc,IAIA8Q,EAAA9Q,KACAiR,EAAA,IAAAF,KAAApQ,UAAAwQ,YAAAjS,KAAAc,IAIA0Q,EAAA1Q,KACAiR,EAAA,IAAAN,EAAA3Q,IAGA,IAAA+B,EAAAC,QAAAuH,GAAA,GAAAvJ,EAAAgC,OAIAgO,EAAA,EACAY,EAAA5Q,GACAiP,EAAAE,QAAA0B,OAAAlQ,UAAAiC,SAAA1D,KAAAc,GAAA,UAEAiP,EAAAE,QAAA,uBAIAF,EAAAC,KAAAvI,KAAA3G,GAIAgR,EADAzH,EAsCA,SAAA0F,EAAAjP,EAAAgQ,EAAAM,EAAAvO,GAEA,IADA,IAAAiP,KACAjS,EAAA,EAAAC,EAAAgB,EAAAgC,OAAmCjD,EAAAC,IAAOD,EAC1C6B,EAAAZ,EAAAsH,OAAAvI,IACAiS,EAAArK,KAAAyK,EAAAnC,EAAAjP,EAAAgQ,EAAAM,EACAhJ,OAAAvI,IAAA,IAEAiS,EAAArK,KAAA,IASA,OANA5E,EAAAwF,QAAA,SAAAjH,GACAA,EAAA+Q,MAAA,UACAL,EAAArK,KAAAyK,EAAAnC,EAAAjP,EAAAgQ,EAAAM,EACAhQ,GAAA,MAGA0Q,EArDAM,CAAArC,EAAAjP,EAAAgQ,EAAAM,EAAAvO,GAEAA,EAAAP,IAAA,SAAAlB,GACA,OAAA8Q,EAAAnC,EAAAjP,EAAAgQ,EAAAM,EAAAhQ,EAAAiJ,KAIA0F,EAAAC,KAAAxL,MA6GA,SAAAsN,EAAAC,EAAAC,GAQA,GANAF,EAAAO,OAAA,SAAAC,EAAAC,GAGA,OAFAC,EACAD,EAAA5O,QAAA,UAAA6O,EACAF,EAAAC,EAAA7P,QAAA,sBAAAI,OAAA,GACG,GAEH,GACA,OAAAkP,EAAA,IACA,KAAAD,EAAA,GAAAA,EAAA,OACA,IACAD,EAAAvL,KAAA,SACA,IACAyL,EAAA,GAGA,OAAAA,EAAA,GAAAD,EAAA,IAAAD,EAAAvL,KAAA,UAAAyL,EAAA,GA5HAS,CAAAX,EAAAC,EAAAC,IAxBAA,EAAA,GAAAD,EAAAC,EAAA,GA+CA,SAAAP,EAAA3Q,GACA,UAAAmE,MAAAxD,UAAAiC,SAAA1D,KAAAc,GAAA,IAwBA,SAAAoR,EAAAnC,EAAAjP,EAAAgQ,EAAAM,EAAAhQ,EAAAiJ,GACA,IAAAjK,EAAAqO,EAAAiE,EAsCA,IArCAA,EAAAnS,OAAAoS,yBAAA7R,EAAAM,KAAyDN,QAAAM,KACzDV,IAEA+N,EADAiE,EAAAE,IACA7C,EAAAE,QAAA,6BAEAF,EAAAE,QAAA,sBAGAyC,EAAAE,MACAnE,EAAAsB,EAAAE,QAAA,uBAGAvO,EAAA0P,EAAAhQ,KACAhB,EAAA,IAAAgB,EAAA,KAEAqN,IACAsB,EAAAC,KAAArM,QAAA+O,EAAA5R,OAAA,GAEA2N,EADAM,EAAA+B,GACAJ,EAAAX,EAAA2C,EAAA5R,MAAA,MAEA4P,EAAAX,EAAA2C,EAAA5R,MAAAgQ,EAAA,IAEAnN,QAAA,WAEA8K,EADApE,EACAoE,EAAApM,MAAA,MAAAC,IAAA,SAAAuQ,GACA,WAAAA,IACWtM,KAAA,MAAAuM,OAAA,GAEX,KAAArE,EAAApM,MAAA,MAAAC,IAAA,SAAAuQ,GACA,YAAAA,IACWtM,KAAA,OAIXkI,EAAAsB,EAAAE,QAAA,yBAGAb,EAAAhP,GAAA,CACA,GAAAiK,GAAAjJ,EAAA+Q,MAAA,SACA,OAAA1D,GAEArO,EAAAwO,KAAAC,UAAA,GAAAzN,IACA+Q,MAAA,iCACA/R,IAAA0S,OAAA,EAAA1S,EAAA0C,OAAA,GACA1C,EAAA2P,EAAAE,QAAA7P,EAAA,UAEAA,IAAAsC,QAAA,YACAA,QAAA,YACAA,QAAA,gBACAtC,EAAA2P,EAAAE,QAAA7P,EAAA,WAIA,OAAAA,EAAA,KAAAqO,EA2BA,SAAAvK,EAAA6O,GACA,OAAArG,MAAAxI,QAAA6O,GAIA,SAAA1C,EAAAtF,GACA,wBAAAA,EAIA,SAAAgE,EAAAhE,GACA,cAAAA,EASA,SAAA9G,EAAA8G,GACA,uBAAAA,EAIA,SAAAtH,EAAAsH,GACA,uBAAAA,EASA,SAAAqE,EAAArE,GACA,gBAAAA,EAIA,SAAA2G,EAAAsB,GACA,OAAAhE,EAAAgE,IAAA,oBAAAC,EAAAD,GAIA,SAAAhE,EAAAjE,GACA,uBAAAA,GAAA,OAAAA,EAIA,SAAA6G,EAAAzR,GACA,OAAA6O,EAAA7O,IAAA,kBAAA8S,EAAA9S,GAIA,SAAAqR,EAAA1M,GACA,OAAAkK,EAAAlK,KACA,mBAAAmO,EAAAnO,iBAAAG,OAIA,SAAA8L,EAAAhG,GACA,yBAAAA,EAgBA,SAAAkI,EAAA3S,GACA,OAAAC,OAAAkB,UAAAiC,SAAA1D,KAAAM,GAIA,SAAA4S,EAAA5R,GACA,OAAAA,EAAA,OAAAA,EAAAoC,SAAA,IAAApC,EAAAoC,SAAA,IApbArE,EAAA8T,SAAA,SAAAP,GAIA,GAHAxD,EAAAO,KACAA,EAAApP,QAAA6S,SAAA,eAAAC,YAAA,IACAT,IAAAU,eACA1D,EAAAgD,GACA,OAAAjB,OAAA,MAAAiB,EAAA,WAAApQ,KAAAmN,GAAA,CACA,IAAA4D,EAAAlI,EAAAkI,IACA3D,EAAAgD,GAAA,WACA,IAAAzD,EAAA9P,EAAAsF,OAAAiI,MAAAvN,EAAAsN,WACA8C,QAAAzK,MAAA,YAAA4N,EAAAW,EAAApE,SAGAS,EAAAgD,GAAA,aAGA,OAAAhD,EAAAgD,IAoCAvT,EAAAmP,UAIAA,EAAA4B,QACAoD,MAAA,MACAC,QAAA,MACAC,WAAA,MACAC,SAAA,MACAC,OAAA,OACAC,MAAA,OACAC,OAAA,OACAC,MAAA,OACAC,MAAA,OACAC,OAAA,OACAC,SAAA,OACAC,KAAA,OACAC,QAAA,QAIA5F,EAAAqC,QACAwD,QAAA,OACAC,OAAA,SACAC,QAAA,SACAzQ,UAAA,OACA0Q,KAAA,OACAC,OAAA,QACAC,KAAA,UAEAtS,OAAA,OAkRA/C,EAAA6E,UAKA7E,EAAAgR,YAKAhR,EAAA0P,SAKA1P,EAAAsV,kBAHA,SAAA5J,GACA,aAAAA,GAOA1L,EAAA4E,WAKA5E,EAAAoE,WAKApE,EAAAuV,SAHA,SAAA7J,GACA,uBAAAA,GAOA1L,EAAA+P,cAKA/P,EAAAqS,WAKArS,EAAA2P,WAKA3P,EAAAuS,SAMAvS,EAAAmS,UAKAnS,EAAA0R,aAUA1R,EAAAwV,YARA,SAAA9J,GACA,cAAAA,GACA,kBAAAA,GACA,iBAAAA,GACA,iBAAAA,GACA,iBAAAA,QACA,IAAAA,GAIA1L,EAAAyV,SAAAnV,EAAA,IAYA,IAAAoV,GAAA,sDACA,mBA6CA,SAAArT,EAAAmO,EAAAmF,GACA,OAAAzU,OAAAkB,UAAAC,eAAA1B,KAAA6P,EAAAmF,GAjCA3V,EAAA4V,IAAA,WAVA,IACA9U,EACA+U,EASAzF,QAAAwF,IAAA,WAVA9U,EAAA,IAAA0R,KACAqD,GAAAhC,EAAA/S,EAAAgV,YACAjC,EAAA/S,EAAAiV,cACAlC,EAAA/S,EAAAkV,eAAA9O,KAAA,MACApG,EAAAmV,UAAAP,EAAA5U,EAAAoV,YAAAL,GAAA3O,KAAA,MAMAlH,EAAAsF,OAAAiI,MAAAvN,EAAAsN,aAiBAtN,EAAAmW,SAAA7V,EAAA,IAEAN,EAAAkR,QAAA,SAAAkF,EAAA1L,GAEA,IAAAA,IAAAiF,EAAAjF,GAAA,OAAA0L,EAIA,IAFA,IAAA5S,EAAAtC,OAAAsC,KAAAkH,GACAlK,EAAAgD,EAAAC,OACAjD,KACA4V,EAAA5S,EAAAhD,IAAAkK,EAAAlH,EAAAhD,IAEA,OAAA4V,2GClkBA,MAAA1P,EAAApG,EAAA,GACA+V,EAAA/V,EAAA,IA8BAN,EAAA+D,QArBgB,EAACuS,EAAc5S,KAC3B,MAAM6S,EAAc7S,EAAO6S,YAE3B,IAAKA,EACD,OAAO7S,EAGX,IAAK,MAAM3B,KAAOwU,EACd,GAAIA,EAAYlU,eAAeN,GAAM,CACjC,MAAMyU,EAAiCD,EAAYxU,GAE9CsU,EAAArF,UAAUwF,IAEX9P,EAAA/C,QAAQ6S,KAAY9S,EAAOE,oBAAoB7B,KAK3D,OAAO2B,mFC5BX,MAAAgD,EAAApG,EAAA,GACAqC,EAAArC,EAAA,GAqBAN,EAAA+D,QAZc,EAACH,EAAaF,KACxB,MAAM+S,MAACA,GAAS/S,EAQhB,OANI+S,GAAS9T,EAAAkC,QAAQ4R,KACjB/S,EAAO+S,MAAQA,EAAMxT,IAAKyT,GACfhQ,EAAA/C,QAAQ+S,EAA4BhT,EAAOE,KAAO8C,EAAAnD,YAAYG,EAAOI,MAAQ,SAAMW,EAAYiC,EAAAnD,YAAYK,MAInHF,mFCnBX,MAAAgD,EAAApG,EAAA,GACAqC,EAAArC,EAAA,GASAN,EAAA+D,QAAe,EAACuS,EAAc5S,KAC1B,MAAMiT,EAAQjT,EAAOiT,MAQrB,OANIA,GAAShU,EAAAkC,QAAQ8R,KACjBjT,EAAOiT,MAAQA,EAAM1T,IAAKyT,GACfhQ,EAAA/C,QAAQ+S,KAIhBhT,mFCnBX,MAAAhB,EAAApC,EAAA,GAMaN,EAAAoH,mBAAqB,IAAI1E,EAAAsD,YAIzBhG,EAAAqK,qBAAuB,IAAI3H,EAAAsD,YAI3BhG,EAAAgE,kBAAoB,IAAItB,EAAAsD,YAKxBhG,EAAAmH,kBAAoB,IAAIzE,EAAAsD,+KCpBrC,MAAAxD,EAAAC,EAAAnC,EAAA,IAEAoG,EAAApG,EAAA,GACAoC,EAAApC,EAAA,GAYAN,EAAA+D,QAAe,EAACH,EAAaF,KACzB,GAAIA,GAAUA,EAAOI,KAAM,CACvB,MAAM8S,EAAWlQ,EAAAnD,YAAYG,EAAOI,MACpC,IAAI+S,EAAUnT,EAAOI,KAEjBJ,EAAOE,IACPiT,EAAUnT,EAAOE,IAAMF,EAAOI,KACtB8S,IACRC,EAAUnQ,EAAAnD,YAAYK,GAAOF,EAAOI,MAGxCJ,EAAOI,KAAO+S,EAETnU,EAAA0E,mBAAmBnD,IAAI4S,IACxBnU,EAAA0E,mBAAmBsD,IAAImM,MAG3B,MAAMC,EAA0BpU,EAAA0E,mBAAmB/F,IAAIwV,GAEvD,GAAIC,EAAW,CACX,IAAIC,EAAY7V,OAAOsG,UAAWsP,GASlC,OAPAC,EAAUjT,KAAO+S,EAEjBtQ,QAAQC,eAAeuQ,EAAW,OAClC7V,OAAOsG,OAAOuP,GACVC,QAAStQ,EAAA9D,wBAAwBiU,KAG9BE,EAGXvU,EAAAuB,SAAU,KAAU8S,gBAGxB,OAAOnT,mFCnDX,IAAAuT,EAAA3W,EAAA,IAASN,EAAAkX,IAAAD,EAAAlT,QACT,IAAAoT,EAAA7W,EAAA,IAASN,EAAAoX,MAAAD,EAAApT,QACT,IAAAsT,EAAA/W,EAAA,IAASN,EAAAsX,MAAAD,EAAAtT,QACT,IAAAwT,EAAAjX,EAAA,IAASN,EAAAuW,YAAAgB,EAAAxT,uFCHT,MAAAyT,EAAAlX,EAAA,IACAmX,EAAAnX,EAAA,IACAoC,EAAApC,EAAA,GAuBIN,EAAAoH,mBAvBI1E,EAAA0E,mBAwBJpH,EAAAqK,qBAxBwB3H,EAAA2H,qBAyBxBrK,EAAAgE,kBAzB8CtB,EAAAsB,kBAsB9ChE,EAAAmH,kBAtBiEzE,EAAAyE,8EAGrE/B,CAAA9E,EAAA,IACA,IAAAqC,EAAArC,EAAA,GAAQN,EAAAwE,OAAA7B,EAAA6B,OAAQxE,EAAA6E,QAAAlC,EAAAkC,QAAS7E,EAAAoE,SAAAzB,EAAAyB,SAAUpE,EAAA4E,SAAAjC,EAAAiC,SAAU5E,EAAA8E,UAAAnC,EAAAmC,UAE7CpC,EAAA2H,qBAAqBK,IAAI,cAAe8M,EAAAjB,aACnC7L,IAAI,QAAS8M,EAAAJ,OACb1M,IAAI,QAAS8M,EAAAF,OACb5M,IAAI,MAAO8M,EAAAN,KAEhBxU,EAAAsB,kBAAkB0G,IAAI,QAAS+M,EAAAzM,OAC1BN,IAAI,SAAU+M,EAAAtM,QAOdT,IAAI,SAAU+M,EAAAvV","file":"index.prd.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"JSFCORE\"] = factory();\n\telse\n\t\troot[\"JSFCORE\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","import {JSONSchema6} from \"json-schema\";\nimport invariant from \"invariant\";\n\nimport {schemaTypeFactory} from \"../factory\";\nimport {isString} from \"../utils\";\n\n/**\n* schema路径解析\n* 把schemaPath解析成JsonPath\n* 1. 去掉properties，items关键字转换成【 - 】\n* 2. 第一个字符去掉末尾的【 # 】\n* @example design#/properties/appType => [\"appType']\n* @example design#/properties/appType/type => [\"appType','type']\n* @example design#/properties/appType/items/properties/type => [\"appType', '-', 'type']\n* @param   {String}    schemaPath schemaPath\n* @param   {Boolean}   keepFirst  是否需要保留schemaId\n* @returns {String[]}             返回数据路径数组\n*/\nconst getDataKeysBySchemaKeys = (schemaPath: string, keepFirst = false): string[] => {\n    const regexp = /#$/g;\n\n    return schemaPath.split(\"/\").map((key: string, index: number) => {\n        // 第一个替换末尾的#\n        if (index === 0 && regexp.test(key)) {\n            // 这里是regexp的陷阱,需要修改lastIndex = 0\n            // 对于同一个正则表达式对象regex，不能重复调用：第一次返回true，第二次就返回false，很显然这种效果不是我们想要的。\n            // 这是因为RegExp.test()方法，第一次从位置0开始查找，可以匹配；第二次的查找位置就不是0了，说以就不能匹配了。\n            regexp.lastIndex = 0;\n\n            return keepFirst ? key.replace(regexp, \"\") : null;\n        }\n\n        // 去掉properties\n        if (key === \"properties\") {\n            return null;\n        }\n\n        // 转换items成-\n        if (key === \"items\") {\n            return \"-\";\n        }\n\n        return key;\n    }).filter((key: string | null) => {\n        return key !== null;\n    }) as string[];\n};\n\n/**\n* 从schemaPath中获取$id\n* @param   {String} schemaPath schemaPath\n* @returns {String}\n*/\nconst getSchemaId = (schemaPath: string): string => {\n    const keys = schemaPath.split(\"/\");\n    const regexp = /#$/g;\n\n    if (!keys.length) {\n        // invariant(false, `${schemaPath} not a valid schemaPath.`);\n        return \"\";\n    }\n\n    // if(!regexp.test(keys[0])){\n    //     invariant(false, `can not find schemaId`);\n    //     return \"\";\n    // }\n\n    return keys[0].replace(regexp, \"\");\n};\n\n\n/**\n* 初始化schema\n* 1. 判断$id，如果不存在，报错\n* 2. 验证schema的结构是否正确，不正确报错\n* @param   {JSONSchema6}  schema  schema\n* @returns {JSONSchema6}          处理完成的schema\n*/\nconst initSchema = (schema: JSONSchema6): JSONSchema6 => {\n    let $id: string | undefined = schema.$id;\n\n    // 如果没有$id, 同时没有$ref的情况下直接报错\n    if (!$id && !schema.$ref) {\n        invariant(false, \"id is required\");\n        return schema;\n    }\n\n    return schema;\n}\n\n/**\n * TODO\n * 遍历schema，生成map\n * 1. 如果schema.type不是string，报错\n * 2. 调用【schemaTypeFactory\n * @param {JSONSchema6} schema  schema\n * @param {String}      $id     id\n */\nconst compileSchema = ($id: string, schema: JSONSchema6): JSONSchema6 => {\n    if (!schemaTypeFactory.has(\"normal\")) {\n        return schema;\n    }\n\n    const id = $id || (schema.$id || \"\") + \"#\";\n    let schemaGenera = schemaTypeFactory.get(\"normal\")(id, schema);\n\n    // 如果不存在type，但是$ref则直接返回\n    if (!schema.type || schema.$ref) {\n        return schemaGenera;\n    }\n\n    // 这里只解析type为字符串的结构，不支持数组类型的type\n    if (!isString(schema.type)) {\n        invariant(false, `schema type[${schema.type}] can only be string.`);\n        return schemaGenera;\n    }\n\n    const type: string = schema.type.toString();\n\n    // 这里调用相对应的type的方法，来解析schema\n    if (schemaTypeFactory.has(type) && [\"array\", \"object\"].indexOf(type) >= 0) {\n        schemaGenera = schemaTypeFactory.get(type)(id, schema);\n    }\n\n    return schemaGenera;\n}\n\n/**\n * 解析schema\n * @param  {JSONSchema6}   schema      需要处理的JsonSchema\n * @param  {String}        $id         JsonSchema 的id\n * @returns {JSONSchema6}              返回处理过后的JsonSchema\n */\nconst resolve = (schema: JSONSchema6, $id = \"\"): JSONSchema6 => {\n    const schemaGenera = !$id ? initSchema(schema) : schema;\n    const id = $id || schema.$ref || \"\";\n\n    // 生成map\n    return compileSchema(id, schemaGenera);\n}\n\nexport {\n    getDataKeysBySchemaKeys,\n    getSchemaId,\n    resolve\n}","/**\n * 暴露hasOwnProperty方法\n */\nexport const hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * 暴露toString方法\n */\nexport const toString = Object.prototype.toString;\n\nexport function typeOf(value: any) {\n\tif (null === value) {\n\t\treturn \"null\";\n\t}\n\n\tlet type = typeof value;\n\n\tif (\"undefined\" === type || \"string\" === type) {\n\t\treturn type;\n\t}\n\n\tlet typeString = toString.call(value);\n\tswitch (typeString) {\n\t\tcase \"[object Array]\":\n\t\t\treturn \"array\";\n\t\tcase \"[object Date]\":\n\t\t\treturn \"date\";\n\t\tcase \"[object Boolean]\":\n\t\t\treturn \"boolean\";\n\t\tcase \"[object Number]\":\n\t\t\treturn \"number\";\n\t\tcase \"[object Function]\":\n\t\t\treturn \"function\";\n\t\tcase \"[object RegExp]\":\n\t\t\treturn \"regexp\";\n\t\tcase \"[object Object]\":\n\t\t\tif (undefined !== value.nodeType) {\n\t\t\t\tif (3 === value.nodeType) {\n\t\t\t\t\treturn /\\S/.test(value.nodeValue) ? \"textnode\" : \"whitespace\";\n\t\t\t\t} else {\n\t\t\t\t\treturn \"element\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn \"object\";\n\t\t\t}\n\t\tdefault:\n\t\t\treturn \"unknow\";\n\t}\n}\n\n/**\n * 判断参数是不是数字\n * @param   {Any}      n    需要验证的参数\n * @returns {Boolean}\n */\nexport const isNumber = (n: any): boolean => {\n\treturn typeOf(n) === \"number\";\n};\n\n/**\n * 判断参数是不是字符串\n * @param   {Any}      n    需要验证的参数\n * @returns {Boolean}\n */\nexport const isString = (n: any): boolean => {\n\treturn typeOf(n) === \"string\";\n};\n\n/**\n * 判断参数是不是boolean\n * @param   {Any}      n    需要验证的参数\n * @returns {Boolean}\n */\nexport const isArray = (n: any): boolean => {\n\treturn typeOf(n) === \"array\";\n};\n\n/**\n * 解析keys\n * 1. 遍历keys中的元素，如果遇到-，则替换成数字\n * @param   {string[]} originKeys 需要做替换的数据路径\n * @param   {string[]} indexList  当前传递过来的indexList\n * @returns {string[]}\n */\nexport const mergeKeys = (originKeys: string[], indexList: number[] = []): string[] => {\n\tconst arrayLevelCopy = [...indexList];\n\tconst keys = originKeys.reverse().map((key: string) => {\n\t\tif (key === \"-\") {\n\t\t\tconst index = arrayLevelCopy.pop();\n\n\t\t\treturn (typeof index === \"undefined\" ? \"\" : index).toString();\n\t\t}\n\n\t\treturn key;\n\t});\n\n\tkeys.reverse();\n\n\treturn keys;\n};\n","export * from \"./factory\";","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\n/**\n * Use invariant() to assert state which your program assumes to be true.\n *\n * Provide sprintf-style format (only %s is supported) and arguments\n * to provide information about what broke and what you were\n * expecting.\n *\n * The invariant message will be stripped in production, but the invariant\n * will remain to ensure logic does not differ in production.\n */\n\nvar invariant = function(condition, format, a, b, c, d, e, f) {\n  if (process.env.NODE_ENV !== 'production') {\n    if (format === undefined) {\n      throw new Error('invariant requires an error message argument');\n    }\n  }\n\n  if (!condition) {\n    var error;\n    if (format === undefined) {\n      error = new Error(\n        'Minified exception occurred; use the non-minified dev environment ' +\n        'for the full error message and additional helpful warnings.'\n      );\n    } else {\n      var args = [a, b, c, d, e, f];\n      var argIndex = 0;\n      error = new Error(\n        format.replace(/%s/g, function() { return args[argIndex++]; })\n      );\n      error.name = 'Invariant Violation';\n    }\n\n    error.framesToPop = 1; // we don't care about invariant's own frame\n    throw error;\n  }\n};\n\nmodule.exports = invariant;\n","/**\n * @file 工厂类\n */\n\nimport {hasOwnProperty} from \"../utils\";\n\n/**\n * 工厂类\n * @class\n */\nexport class BaseFactory<T> {\n    /**\n     * 用来存放工厂实例\n     * @protected\n     * @type {{ [id: string]: T; }}\n     * @memberof BaseFactory\n     */\n    protected store: {[id: string]: T;} = {};\n    /**\n     * 用来存放被锁定工厂实例\n     * @private\n     * @type {{ [id: string]: T; }}\n     * @memberof BaseFactory\n     */\n    private _lock: {[id: string]: boolean;} = {};\n\n    /**\n     * 添加一个实例\n     * @param {string} name 实例的名称\n     * @param {T} instance  实例\n     * @param {boolean} [override=false] 是否覆盖\n     * @returns {BaseFactory<T>} 是否添加成功\n     * @memberof BaseFactory\n     * @example\n     * \n     * this.add(\"key\", true);\n     */\n    public add(name: string, instance: T, override = false): BaseFactory<T> {\n        if (hasOwnProperty.call(this._lock, name) || (this.has(name) && !override)) {\n            return this;\n        }\n\n        this.store[name] = instance;\n\n        return this;\n    }\n\n    /**\n     * 是否存在key值\n     * @param {string} key key值\n     * @returns {boolean} 是否存在\n     * @memberof BaseFactory\n     */\n    public has(key: string): boolean {\n        return hasOwnProperty.call(this.store, key);\n    }\n\n    /**\n     * 获取一个实例\n     * @param {string} key  实例标志\n     * @returns {T}         返回当前key对应的实例\n     * @memberof BaseFactory\n     */\n    public get(key: string): T {\n        if (this.has(key)) {\n            return this.store[key];\n        }\n\n        return null as any;\n    }\n\n    /**\n     * 锁定实例,锁定后不能删除和覆盖\n     * @param {string} key  key\n     * @memberof BaseFactory\n     */\n    public lock(key: string): void {\n        if (this.has(key)) {\n            this._lock[key] = true;\n        }\n    }\n\n    /**\n     * 解锁实例\n     * @param {string} key  key\n     * @memberof BaseFactory\n     */\n    public unLock(key: string): void {\n        if (this.has(key)) {\n            Reflect.deleteProperty(this._lock, key);\n        }\n    }\n\n    /**\n     * 遍历所有的元素\n     * @param {(key: string, val: T) => any} func 遍历方法\n     * @returns {void}\n     * @memberof BaseFactory\n     */\n    public forEach(func: (key: string, val: T) => any): void {\n        if (!func) {\n            return;\n        }\n\n        for (const key in this.store) {\n            const element = this.store[key];\n\n            if (func(key, element) === false) {\n                break;\n            }\n        }\n    }\n\n    /**\n     * 清空当前的hash\n     * @memberof BaseFactory\n     */\n    public clear(): void {\n        this.store = {};\n        this._lock = {};\n    }\n}\n","import invariant from \"invariant\";\n\nimport {UiSchema} from \"../models/uischema\";\nimport {schemaFieldFactory, schemaKeysFactory} from \"../factory\";\nimport {getDataKeysBySchemaKeys, getSchemaId} from \"./resolve\";\nimport {FxJsonSchema} from \"../models/jsonschema\";\n\n/**\n* 根据给出的parentKeys和uiSchemaKeys来获取uiSchema的key\n* 1. 遍历uiSchemaKeys，分别于parentKeys做合并\n* 2. 合并后的keys去仓库里面找，如果为找到则报错\n* 3. 判断找到的schema中是否带有 $ref\n* 4. 如果有$ref，则更改parentKeys为$ref的路径\n* 5. 如果没有，则更改parentKeys为当前合并的keys\n* @param  {String[]} uiSchemaKeys      当前的keys\n* @param  {String} parentSchemaPath    父亲的schemaPath\n* @return {String}                     返回的key\n*/\nconst getUiSchemaKeyRecursion = (uiSchemaKeys: string[], parentSchemaPath: string): string => {\n    let parentKeysWithDef = getDataKeysBySchemaKeys(parentSchemaPath, true);\n\n    while (uiSchemaKeys.length) {\n        const key: string = uiSchemaKeys.shift() || \"\";\n\n        parentKeysWithDef = parentKeysWithDef.concat(key ? [key] : []);\n\n        const keysStr: string = parentKeysWithDef.join(\"/\").replace(/\\/$/, \"\");\n\n        if (!schemaKeysFactory.has(keysStr)) {\n            // if (!isProd) {\n            //     // console.log(schemaFieldFactory, schemaKeysFactory);\n            //     warn(`${keysStr} did not found.`);\n            // }\n\n            invariant(false, `${keysStr} did not found.`);\n\n            return \"\";\n        }\n\n        const schema: FxJsonSchema = schemaFieldFactory.get(schemaKeysFactory.get(keysStr));\n\n        if (schema.$ref) {\n            parentKeysWithDef = getDataKeysBySchemaKeys(schema.$ref, true);\n        }\n    }\n\n    return parentKeysWithDef.join(\"/\");\n};\n/**\n  * 获取父亲的keys\n  * @param  {UiSchema}               parent 父亲schema\n  * @return {Array<string | number>}\n  */\nconst getParentSchemaKeys = (parent?: UiSchema): Array<string | number> => {\n    if (parent && parent.keys) {\n        return parent.keys;\n    }\n\n    return [];\n};\n\n/**\n * 获取当前uiSchema的key\n * 如果没有父亲节点\n * 默认返回父亲的key+当前uiSchema的key\n * @param  {UiSchema} parent      父亲schema\n * @param  {string}   schemaPath  schema的路径\n * @param  {UiSchema} uiSchema    uiSchma\n * @return {String}               返回的key\n */\nconst getCurrentSchemaKey = (parent: UiSchema | undefined, schemaPath: string, uiSchema: UiSchema): string => {\n    const $id = getSchemaId(schemaPath);\n    let uiSchemaKeys = uiSchema.key.split(\"/\");\n\n    // 如果父亲节点的shcemaId不是传入的schemaId，则不使用父亲的key做计算\n    if (parent && getSchemaId(parent.key) === $id) {\n        return getUiSchemaKeyRecursion(uiSchemaKeys, parent.schemaPath || \"\");\n    }\n\n    // const keys = getDataKeysBySchemaKeys(schemaPath, true);\n    // console.log(\"计算得出的keys\", $id, schemaPath, getDataKeysBySchemaKeys(schemaPath), getDataKeysBySchemaKeys(schemaPath, true));\n\n    // keys.pop();\n\n    return getUiSchemaKeyRecursion(uiSchemaKeys, schemaPath);\n};\n\n/**\n * 如果在【schemaKeysFactory】中没有发现uiSchema.key,则报错\n * 从【schemaKeysFactory】获取对应的schema，与uiSchema合并之后返回\n * @param  {UiSchema} uiSchema uiSchema\n * @return {UiSchema}          返回uiSchema\n */\nconst mergeUiSchemaToArray = (uiSchema: UiSchema): UiSchema => {\n    if (!schemaKeysFactory.has(uiSchema.key)) {\n        // if (!isProd) {\n        //     console.log(schemaKeysFactory);\n        //     warn(`${uiSchema.key} did not found. do you forget to resolve schema first.`);\n        // }\n\n        invariant(false, `${uiSchema.key} did not found. do you forget to resolve schema first.`);\n\n        return uiSchema;\n    }\n\n    const schemaKey: string = schemaKeysFactory.get(uiSchema.key);\n    const schema = schemaFieldFactory.get(schemaKey);\n\n    return Object.assign({}, schema, uiSchema);\n};\n\n/**\n * 初始化uiSchema\n * 如果是字符串；用$id合并之后，获取schema\n * 如果是【UiSchema】；合并key之后，获取schema\n * @param  {UiSchema} parent      父亲schema\n * @param  {string}   schemaPath  schema的路径\n * @param  {UiSchema} uiSchema    uiSchma\n * @return {UiSchema}            返回uiSchema\n */\nconst initUiSchema = (parent: UiSchema | undefined, schemaPath: string, uiSchema: UiSchema): UiSchema => {\n    let parentKeys = getParentSchemaKeys(parent),\n        key = getCurrentSchemaKey(parent, schemaPath, uiSchema),\n        keys,\n        isRequired = false,\n        originSchema: FxJsonSchema = {},\n        schemaKey;\n\n    keys = parentKeys.concat(uiSchema.key ? uiSchema.key.split(\"/\") : []);\n\n    // if (parent.type === \"object\" && parent.required) {\n    //     const keys1 = keys.concat([]);\n\n    //     isRequired = parent.required.indexOf((keys1.pop() || \"\").toString()) >= 0;\n    // }\n\n    if (schemaKeysFactory.has(key)) {\n        schemaKey = schemaKeysFactory.get(key);\n        if (schemaFieldFactory.has(schemaKey)) {\n            originSchema = schemaFieldFactory.get(schemaKey);\n            // isRequired = originSchema.isRequired;\n        }\n    }\n\n    return Object.assign({isRequired}, originSchema, uiSchema, {\n        key,\n        keys\n    });\n};\n\n/**\n * 合并后的数据添加到数组中去\n * 这里因为可以使用*,所有拆成了前面和后面以及*三个部分\n * @param  {UiSchema[]} uiSchemasFirst 前面部分\n * @param  {UiSchema[]} uiSchemasLast  后面部分\n * @param  {UiSchema}   uiSchema       需要处理的uiSchema\n * @return {Void}\n */\nconst pushMergeResult = (uiSchemasFirst: UiSchema[], uiSchemasLast: UiSchema[], uiSchema: UiSchema): void => {\n    if (\n        !uiSchemasFirst.concat(uiSchemasLast).filter((val: UiSchema) => {\n            return val.key === uiSchema.key;\n        }).length\n    ) {\n        uiSchema = mergeUiSchemaToArray(uiSchema);\n        uiSchemasFirst.push(uiSchema);\n    }\n};\n\n/**\n * 合并uiSchema\n * 1. 先判断uiSchema中是否存在*\n * 2. 如果没有*号，则遍历uiSchema，合并数据\n * 3. 如果存在*号；先合并*之前和*之后的uiSchema\n * 4. 遍历当前的schema：\n *    如果是object，则遍历properties，然后合并数据\n *    如果是array，则直接返回items，然后合并数据\n * @param  {UiSchema}                    parent      父亲的uiSchema\n * @param  {string}                      schemaPath  当前的schema路径\n * @param  {Array<UiSchema | string>}    uiSchemas   全部的uiSchemas\n * @param  {FxJsonSchema}                curSchema   当前的Schema\n * @return {UiSchema[]}                              合并后的uiSchemas\n */\n// tslint:disable-next-line:max-line-length\nconst initMergeSchema = (parent: UiSchema | undefined, schemaPath: string, uiSchemas: Array<UiSchema | string>, curSchema: FxJsonSchema): UiSchema[] => {\n    let idx: number = uiSchemas.indexOf(\"*\"),\n        uiSchemasFirst: UiSchema[] = [],\n        uiSchemasLast: UiSchema[] = [],\n        types = [\"object\", \"array\"];\n\n    // 如果存在多个*，则报错\n    if (uiSchemas.lastIndexOf(\"*\") !== idx) {\n        // if (!isProd) {\n        //     // throw new Error(\"uiSchema can only has one *.\");\n        //     warn(\"uiSchema can only has one *.\");\n        // }\n\n        invariant(false, \"uiSchema can only has one *.\");\n\n        return [];\n    }\n\n    // 不存在*号的情况\n    if (idx < 0) {\n        uiSchemas.slice(idx + 1).map((us: string | UiSchema) => {\n            let uiSchema = initUiSchema(parent, schemaPath, us.constructor === String ? {key: us} as UiSchema : us as UiSchema);\n\n            uiSchemasFirst.push(mergeUiSchemaToArray(uiSchema));\n        });\n\n        return uiSchemasFirst;\n    }\n\n    // 处理*之前的数据\n    uiSchemas.slice(0, idx).forEach((us: string | UiSchema) => {\n        let uiSchema = initUiSchema(parent, curSchema.schemaPath || schemaPath, us.constructor === String ? {key: us} as UiSchema : us as UiSchema);\n\n        uiSchemasFirst.push(mergeUiSchemaToArray(uiSchema));\n    });\n\n    // 处理*之后的数据\n    uiSchemas.slice(idx + 1).forEach((us: string | UiSchema) => {\n        let uiSchema = initUiSchema(parent, curSchema.schemaPath || schemaPath, us.constructor === String ? {key: us} as UiSchema : us as UiSchema);\n\n        uiSchemasLast.push(mergeUiSchemaToArray(uiSchema));\n    });\n\n    // 如果是object类型，遍历properties属性，与之前的数据去重后添加到数组\n    if (curSchema.type === types[0] && curSchema.properties) {\n        Object.keys(curSchema.properties).forEach((us: string) => {\n            const uiSchema = initUiSchema(parent, curSchema.schemaPath || schemaPath, {\n                key: us,\n                isRequired: curSchema.required ? curSchema.required.indexOf(us) >= 0 : false\n            } as UiSchema);\n\n            pushMergeResult(uiSchemasFirst, uiSchemasLast, uiSchema);\n        });\n    }\n\n    // 如果是数组，获取下一级的key，然后做对比处理\n    if (curSchema.type === types[1] && curSchema.items) {\n        const uiSchema = initUiSchema(parent, curSchema.schemaPath || schemaPath, {\n            key: \"-\"\n        });\n\n        pushMergeResult(uiSchemasFirst, uiSchemasLast, uiSchema);\n    }\n\n    // 是普通对象\n    if (types.indexOf(curSchema.type as string) < 0) {\n        let uiSchema = initUiSchema(parent, schemaPath, {\n            key: getDataKeysBySchemaKeys(curSchema.schemaPath || \"\", false).join(\"/\")\n        });\n\n        pushMergeResult(uiSchemasFirst, uiSchemasLast, uiSchema);\n    }\n\n    return uiSchemasFirst.concat(uiSchemasLast);\n};\n\n/**\n * 用来转换uiSchema的类, 如果有$ref，则直接使用\n * @param schemaPath {String}                     schema的路径\n * @param parent     {UiSchema}                   父scehma\n * @param uiSchemas  {Array<UiSchema | string>}   需要合并的uiSchemas\n */\nexport const merge = (schemaPath: string, parent?: UiSchema, uiSchemas?: Array<UiSchema | string>): UiSchema[] => {\n    // 获取schemaPath对应的schemaId\n    let keyPath: string = getDataKeysBySchemaKeys(schemaPath, true).join(\"/\");\n\n    // 如果keyPath还没有解析，则报错\n    if (!schemaKeysFactory.has(keyPath)) {\n        // if (!isProd) {\n        //     warn(`${keyPath} not exist or ${keyPath} did not resolve yet.`);\n        // }\n\n        invariant(false, `${keyPath} not exist or ${keyPath} did not resolve yet.`);\n\n        return [];\n    }\n\n    // 获取当前的schemaField\n    const curSchema = schemaFieldFactory.get(schemaKeysFactory.get(keyPath));\n\n    // 去掉$id这个字段\n    if (curSchema.$id) {\n        if (!curSchema.$ref) {\n            curSchema.$ref = curSchema.$id;\n        }\n        curSchema.$id = undefined;\n        delete curSchema.$id;\n    }\n\n    // 合并schema\n    return initMergeSchema(parent, schemaPath, uiSchemas || [\"*\"], curSchema);\n}\n","import {isNumber} from \"../utils\";\n\nexport type Tsn = string | number;\n\n/**\n * tree map struct\n * 这里用来记录数据的元数据信息\n * 元数据信息包括，isValid，isLoading，isShow，...etc\n */\nexport class TreeMap<T> {\n    public children: TreeMap<T>[] = [];\n\n    /**\n      * 构造函数\n      * @param   {String}  key    当前节点的key\n      * @param   {any}     value  当前节点的值\n      * @param   {TreeMap<T>} parent 当前节点的父亲节点\n      * @returns {Void}\n      */\n    constructor(private key: string, public value: any, public readonly parent?: TreeMap<T>) {}\n\n    /**\n    * 添加一个子元素\n    * @param    {Array<Tsn>} keys  节点的路径，遍历keys来动态创建节点 example [\"root\",\"b\"]  root -> b\n    * @param    {any}        value 孩子的数据\n    * @returns  {TreeMap<T>}\n    */\n    public addChild(keys: Array<Tsn>, value?: any): TreeMap<T> {\n        let curNode: TreeMap<T> = this;\n        let child: TreeMap<T> | null = null;\n\n        if (!keys.length) {\n            return this;\n        }\n\n        for (const key of keys) {\n            child = curNode.contains(key);\n\n            // 如果是数字的话，则说明是数组，key改成`-`\n            // 如果不是数组的话，则无所谓顺序，直接push就行\n            // 如果是数组，则要保证顺序和数据的下标一致\n            if (!child) {\n                if (isNumber(key)) {\n                    child = new TreeMap<T>(\"-\", null, curNode);\n                    curNode.children[key as number] = child;\n                } else {\n                    child = new TreeMap<T>(key.toString(), null, curNode);\n                    curNode.children.push(child);\n                }\n            }\n\n            curNode = child;\n        }\n\n        // if (child) {\n        (child as TreeMap<T>).value = value;\n        // }\n\n        return child as TreeMap<T>;\n    }\n\n    /**\n   * 获取当前的key\n   * 如果key是`-`,代表是数组，则转换成数组下标\n   * time complexity = O(1) / Constant\n   * @returns string\n   */\n    public getKey(): string {\n        if (!this.key || this.key === \"-\") {\n            return this.getIndexInParent().toString();\n        }\n\n        return this.key;\n    }\n\n    /**\n   * 获取当前节点的keys路径\n   * time complexity = O(1) / Constant\n   * @returns {string[]}\n   */\n    public getCurrentKeys(): Array<Tsn> {\n        let keys: Array<Tsn> = [];\n\n        if (this.parent) {\n            keys = keys.concat(this.parent.getCurrentKeys());\n        }\n\n        return keys.concat([this.key]);\n    }\n\n    /**\n    * 获取当前节点在父节点中的下标索引\n    * time complexity = O(1) / Constant\n    * @returns {number}\n    */\n    public getIndexInParent(): number {\n        let index = -1;\n\n        if (!this.parent) {\n            return index;\n        }\n\n        const {children} = this.parent;\n\n        for (let i = 0, n = children.length; i < n; i++) {\n            const child = children[i];\n\n            if (child && child === this) {\n                index = i;\n                break;\n            }\n        }\n\n        return index;\n    }\n\n    /**\n    * 从当前节点查找是否存在节点\n    * time complexity = O(n) / Linear\n    * @param   {Tsn}     key 节点的数据\n    * @returns {TreeMap<T>}\n    */\n    public contains(key: Tsn): TreeMap<T> | null {\n        // 如果是数字的话，直接返回children中对应下标的元素\n        if (isNumber(key)) {\n            if (this.children.length <= key) {\n                return null;\n            }\n\n            let child = this.children[key as number];\n\n            if (!child) {\n                this.children[key as number] = new TreeMap<T>(\"-\", null, this);\n\n                child = this.children[key as number];\n            }\n\n            return child;\n        }\n\n        // 如果当前节点的key===要搜索的key，则返回本身\n        if (this.getKey() === key) {\n            return this;\n        }\n\n        // 如果没有children，则返回空\n        if (!this.children || this.children.length === 0) {\n            return null;\n        }\n        // 遍历子节点，层层递归，直到找到\n        for (let i = 0; i < this.children.length; i++) {\n            const child = this.children[i];\n\n            if (child && child.contains(key)) {\n                return child;\n            }\n        }\n\n        return null;\n    }\n\n    /**\n    * 根据给定的路径数组，返回对应的节点\n    * time complexity = O(n) / Linear\n    * @param   {Array<Tsn>}    keys路径\n    * @returns {TreeMap<T> | null}\n    */\n    public containPath(keys: Array<Tsn>): TreeMap<T> | null {\n        let node: TreeMap<T> | null = this;\n\n        for (const key of keys) {\n            node = node.contains(key);\n\n            if (!node) {\n                break;\n            }\n        }\n\n        return node;\n    }\n\n    /**\n    * 从父亲节点中删除当前节点\n    * time complexity = O(n) / Linear\n    */\n    public removeFromParent(): void {\n        const index = this.getIndexInParent();\n\n        if (!this.parent) {\n            return;\n        }\n\n        this.parent.children.splice(index, 1);\n    }\n\n    /**\n    * 移动到某个位置\n    * time complexity = O(1) / Linear\n    * @param   {Number} toIndex 需要移动到的位置\n    * @returns {Void}\n    */\n    public insertToFromParent(toIndex: number): void {\n        let curIndex = this.getIndexInParent();\n\n        // 如果没有父亲，或者父亲没有子节点，或者当前位置小于0\n        if (!this.parent || !this.parent.children || curIndex < 0) {\n            return;\n        }\n\n        // 父亲节点中删除当前元素\n        this.removeFromParent();\n\n        // 如果超出了父亲的子节点数量，添加一个\n        if (this.parent.children.length <= toIndex) {\n            this.parent.children[toIndex] = this;\n            return;\n        }\n\n        // 将当前节点插入到指定的位置\n        this.parent.children.splice(toIndex, 0, this);\n    }\n\n    /**\n    * 遍历指定节点下所有子节点的value数据,当前节点不计算在内\n    * @param   {(node: TreeMap<T>) => any}     clearFunc      map方法\n    * @param   {Boolean}                    currentNode    是否包含当前节点\n    * @returns {Void}\n    */\n    public forEach(clearFunc: (node: TreeMap<T>) => any, currentNode = false) {\n        if (currentNode) {\n            this.value = clearFunc(this);\n        }\n\n        // if (!this.children.length) {\n        //     return;\n        // }\n\n        for (let i = 0, n = this.children.length; i < n; i++) {\n            let child = this.children[i];\n\n            if (child) {\n                child.value = clearFunc(child);\n                child.forEach(clearFunc);\n            }\n        }\n    }\n}\n","export * from \"./tree\";\nexport * from \"./merge\";\nexport * from \"./resolve\";\nexport * from \"./factory\";\n","import { JSONSchema6 } from \"json-schema\";\n\nimport { schemaFieldFactory, schemaKeysFactory, schemaKeyWordFactory } from \"../factory\";\nimport { getDataKeysBySchemaKeys, getSchemaId } from \"../libs/resolve\";\n\n\n/**\n * 遍历所有的keyword，解析schema\n * @param   {JSONSchema6} schema schema\n * @returns {JSONSchema6}        解析过后的schema\n */\nexport const convertKeys = ($id: string, schema: JSONSchema6): JSONSchema6 => {\n    schemaKeyWordFactory.forEach((_key: string, val: ($id: string, schema: JSONSchema6) => JSONSchema6) => {\n        if (schema) {\n            schema = val($id, schema);\n        }\n    });\n\n    return schema;\n};\n\n\n/**\n * 解析schema中的type!=array && type!=object的结构\n * @param  {JSONSchema6} schema    当前的schema\n * @param  {String}      schemaKey 当前的schemaKey\n * @return {JSONSchema6}           返回处理过后的schema\n */\nexport default (schemaKey: string, schema: JSONSchema6) => {\n    let keys: string[] = getDataKeysBySchemaKeys(schemaKey, false),\n        $id = getSchemaId(schemaKey),\n        currentSchema = convertKeys(schemaKey, schema),\n        alreadyHasEmptySchema = false,\n        emptySchema: any = {};\n\n    // 先从缓存中提取schema，如果存在的话\n    alreadyHasEmptySchema = schemaFieldFactory.has(schemaKey);\n    if (alreadyHasEmptySchema) {\n        emptySchema = schemaFieldFactory.get(schemaKey);\n    }\n\n    // 如果已经存在，则直接返回\n    if (alreadyHasEmptySchema && emptySchema.schemaPath) {\n        return currentSchema || schema;\n    }\n\n    if (!$id) {\n        $id = schema.$id || \"\";\n    }\n\n    if (schema.$id && schema.$ref) {\n        schemaKeysFactory.add(schema.$id, schema.$ref);\n    }\n\n    // 将当前获取的schema加入到schemaFieldFactory中\n    schemaFieldFactory.add(\n        schemaKey,\n        Object.assign(emptySchema, currentSchema || schema, {\n            keys,\n            schemaPath: schemaKey\n        })\n    );\n    // 加入key的索引\n    schemaKeysFactory.add([$id].concat(keys).join(\"/\"), schemaKey);\n\n    return currentSchema || schema;\n};\n","import { JSONSchema6 } from \"json-schema\";\nimport invariant from \"invariant\"\n\nimport { resolve, getDataKeysBySchemaKeys } from \"../libs/resolve\";\n// import {warn, isProd} from \"../utils\";\n\nconst pro = \"properties\";\n\n/**\n * 解析schema中的type=object的结构\n * 如果存在schema.properties,则遍历properties，继续解析schema.properties[key]\n * @param  {JSONSchema6} schema    当前的schema\n * @param  {String}      schemaKey 当前的schemaKey\n * @return {JSONSchema6}           返回处理过后的schema\n */\nexport default (schemaKey: string, schema: JSONSchema6) => {\n    const { properties, required = [], $ref } = schema;\n\n    if (properties && !$ref) {\n        Object.keys(properties).forEach((key: string) => {\n            if ([pro, \"items\"].indexOf(key) >= 0) {\n                // if (!isProd) {\n                //     warn(`${key}can not be key words.`);\n                // }\n\n                invariant(false, `${key}can not be key words.`);\n\n                return;\n            }\n\n            if (!properties || !properties[key]) {\n                return;\n            }\n\n            Object.assign(properties[key], {\n                isRequired: required.indexOf(key) >= 0\n            });\n\n            const mergeSchema = resolve(properties[key] as JSONSchema6, [schemaKey, pro, key].join(\"/\")),\n                keys: string[] = getDataKeysBySchemaKeys([schemaKey, pro, key].join(\"/\"));\n\n            Object.assign(mergeSchema, {\n                keys\n            });\n        });\n    }\n\n    return schema;\n};\n","import { JSONSchema6 } from \"json-schema\";\n\nimport { resolve, getDataKeysBySchemaKeys } from \"../libs/resolve\";\n\nconst itemsName = \"items\";\n\n/**\n * 解析schema中的type=array的结构\n * 如果存在items,则继续解析schema.item\n * @param  {JSONSchema6} schema    当前的schema\n * @param  {String}      schemaPath 当前的schemaPath ,example \"a#/properties/b/properties/c\"\n * @return {JSONSchema6}           返回处理过后的schema,example \"{title:'21',$id:'a'}\"\n */\nexport default (schemaPath: string, schema: JSONSchema6) => {\n    let { items } = schema;\n\n    if (items) {\n        const itemSchemaPath = [schemaPath, itemsName].join(\"/\");\n        const mergeSchema = resolve(items as JSONSchema6, itemSchemaPath);\n        const keys: string[] = getDataKeysBySchemaKeys(itemSchemaPath);\n\n        Object.assign(mergeSchema, {\n            keys\n        });\n    }\n\n    return schema;\n};\n","\nexport { default as array } from \"./array\";\nexport { default as object } from \"./object\";\nexport { default as normal } from \"./normal\";\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object'\n    && typeof arg.copy === 'function'\n    && typeof arg.fill === 'function'\n    && typeof arg.readUInt8 === 'function';\n}","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nvar formatRegExp = /%[sdj%]/g;\nexports.format = function(f) {\n  if (!isString(f)) {\n    var objects = [];\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function(x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n    switch (x) {\n      case '%s': return String(args[i++]);\n      case '%d': return Number(args[i++]);\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n      default:\n        return x;\n    }\n  });\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n  return str;\n};\n\n\n// Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\nexports.deprecate = function(fn, msg) {\n  // Allow for deprecating things in the process of starting up.\n  if (isUndefined(global.process)) {\n    return function() {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  if (process.noDeprecation === true) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\n\nvar debugs = {};\nvar debugEnviron;\nexports.debuglog = function(set) {\n  if (isUndefined(debugEnviron))\n    debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n      debugs[set] = function() {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function() {};\n    }\n  }\n  return debugs[set];\n};\n\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n/* legacy: obj, showHidden, depth, colors*/\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  };\n  // legacy...\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  }\n  // set default options\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\nexports.inspect = inspect;\n\n\n// http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\ninspect.colors = {\n  'bold' : [1, 22],\n  'italic' : [3, 23],\n  'underline' : [4, 24],\n  'inverse' : [7, 27],\n  'white' : [37, 39],\n  'grey' : [90, 39],\n  'black' : [30, 39],\n  'blue' : [34, 39],\n  'cyan' : [36, 39],\n  'green' : [32, 39],\n  'magenta' : [35, 39],\n  'red' : [31, 39],\n  'yellow' : [33, 39]\n};\n\n// Don't use 'blue' not visible on cmd.exe\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return '\\u001b[' + inspect.colors[style][0] + 'm' + str +\n           '\\u001b[' + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\n\nfunction arrayToHash(array) {\n  var hash = {};\n\n  array.forEach(function(val, idx) {\n    hash[val] = true;\n  });\n\n  return hash;\n}\n\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect &&\n      value &&\n      isFunction(value.inspect) &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // Look up the keys of the object.\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  }\n\n  // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n  if (isError(value)\n      && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  }\n\n  // Some type of object without properties can be shortcutted.\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value))\n    return ctx.stylize('undefined', 'undefined');\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                             .replace(/'/g, \"\\\\'\")\n                                             .replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n  if (isNumber(value))\n    return ctx.stylize('' + value, 'number');\n  if (isBoolean(value))\n    return ctx.stylize('' + value, 'boolean');\n  // For some reason typeof null is \"object\", so special case here.\n  if (isNull(value))\n    return ctx.stylize('null', 'null');\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || { value: value[key] };\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) &&\n      (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\n\n// log is just a thin wrapper to console.log that prepends a timestamp\nexports.log = function() {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n\n\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\nexports.inherits = require('inherits');\n\nexports._extend = function(origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n\n  var keys = Object.keys(add);\n  var i = keys.length;\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n","import {JSONSchema6} from \"json-schema\";\n\nimport {resolve} from \"../libs/resolve\";\nimport {isBoolean} from \"util\";\n\n/**\n * 解析schema中的关键字 definitions\n * 如果发现有definitions关键字，解析schema\n * @param  {string}      $id    当前的schema的ID\n * @param  {JSONSchema6} schema 当前的schema\n * @return {JSONSchema6}        处理过后的schema\n */\nconst defined = (_$id: string, schema: JSONSchema6): JSONSchema6 => {\n    const definitions = schema.definitions;\n\n    if (!definitions) {\n        return schema;\n    }\n\n    for (const key in definitions) {\n        if (definitions.hasOwnProperty(key)) {\n            const element: JSONSchema6 | boolean = definitions[key];\n\n            if (!isBoolean(element)) {\n                // tslint:disable-next-line:no-unused-expression\n                resolve(element, `${schema.$id}#/definitions/${key}`);\n            }\n        }\n    }\n\n    return schema;\n};\n\nexport default defined;","import {JSONSchema6, JSONSchema6Definition} from \"json-schema\";\n\nimport {resolve, getSchemaId} from \"../libs/resolve\";\nimport {isArray} from \"../utils\";\n\n/**\n * 解析schema中的关键字 oneOf\n * 如果发现有oneOf关键字，遍历替换成schema\n * @param  {string}      $id    当前的schema的ID\n * @param  {JSONSchema6} schema 当前的schema\n * @return {JSONSchema6}        处理过后的schema\n */\nconst anyOf = ($id: string, schema: JSONSchema6): JSONSchema6 => {\n    const {anyOf} = schema;\n\n    if (anyOf && isArray(anyOf)) {\n        schema.anyOf = anyOf.map((schemaOfOne: JSONSchema6Definition) => {\n            return resolve(schemaOfOne as JSONSchema6, schema.$id || getSchemaId(schema.$ref || \"\") ? undefined : getSchemaId($id));\n        });\n    }\n\n    return schema;\n};\n\nexport default anyOf;","import {JSONSchema6, JSONSchema6Definition} from \"json-schema\";\n\nimport {resolve} from \"../libs/resolve\";\nimport {isArray} from \"../utils\";\n\n/**\n * 解析schema中的关键字 oneOf\n * 如果发现有oneOf关键字，遍历替换成schema\n * @param  {string}      $id    当前的schema的ID\n * @param  {JSONSchema6} schema 当前的schema\n * @return {JSONSchema6}        处理过后的schema\n */\nexport default (_$id: string, schema: JSONSchema6): JSONSchema6 => {\n    const oneOf = schema.oneOf;\n\n    if (oneOf && isArray(oneOf)) {\n        schema.oneOf = oneOf.map((schemaOfOne: JSONSchema6Definition) => {\n            return resolve(schemaOfOne as JSONSchema6);\n        });\n    }\n\n    return schema;\n};\n","import { JSONSchema6 } from \"json-schema\";\n\nimport { BaseFactory } from \"../libs/factory\";\nimport { FxJsonSchema } from \"../models/jsonschema\";\n\n/**\n * JsonSchema工厂\n */\nexport const schemaFieldFactory = new BaseFactory<FxJsonSchema>();\n/**\n * 关键字工厂\n */\nexport const schemaKeyWordFactory = new BaseFactory<($id: string, schema: JSONSchema6) => JSONSchema6>();\n/**\n * 类型工厂\n */\nexport const schemaTypeFactory = new BaseFactory<($id: string, schema: JSONSchema6) => JSONSchema6>();\n/**\n * \n * 存放jsonkey与schemaPath的对应关系\n */\nexport const schemaKeysFactory = new BaseFactory<string>();","import { JSONSchema6 } from \"json-schema\";\nimport invariant from \"invariant\";\n\nimport { getDataKeysBySchemaKeys, getSchemaId } from \"../libs/resolve\";\nimport { schemaFieldFactory } from \"../factory\";\nimport { FxJsonSchema } from \"../models/jsonschema\";\n\n/**\n * 解析schema中的关键字 $ref\n * 1. 获取$ref的id\n * 2. 重新定义$id = $id + $ref, 赋值给$ref\n * 3. 解析schema\n * @param  {string}      $id    当前的schema的ID\n * @param  {JSONSchema6} schema 当前的schema\n * @return {JSONSchema6}        处理过后的schema\n */\nexport default ($id: string, schema: JSONSchema6) => {\n    if (schema && schema.$ref) {\n        const schemaId = getSchemaId(schema.$ref);\n        let refName = schema.$ref;\n\n        if (schema.$id) {\n            refName = schema.$id + schema.$ref;\n        } else if (!schemaId) {\n            refName = getSchemaId($id) + schema.$ref;\n        }\n\n        schema.$ref = refName;\n\n        if (!schemaFieldFactory.has(refName)) {\n            schemaFieldFactory.add(refName, {});\n        }\n\n        const refSchema: FxJsonSchema = schemaFieldFactory.get(refName);\n\n        if (refSchema) {\n            let schemaAjv = Object.assign({}, refSchema) as JSONSchema6;\n\n            schemaAjv.$ref = refName;\n\n            Reflect.deleteProperty(schemaAjv, \"$id\");\n            Object.assign(schemaAjv, {\n                refKeys: getDataKeysBySchemaKeys(refName)\n            });\n\n            return schemaAjv;\n        }\n\n        invariant(false, `${refName} not exist.`);\n    }\n\n    return schema;\n};\n","export { default as ref } from \"./ref\";\nexport { default as oneof } from \"./oneof\";\nexport { default as anyof } from \"./anyof\";\nexport { default as definitions } from \"./defined\";\n","import {ref, oneof, anyof, definitions} from \"./keywords\";\nimport {array, normal, object} from \"./types\";\nimport {schemaFieldFactory, schemaKeyWordFactory, schemaTypeFactory, schemaKeysFactory} from \"./factory\";\n\nexport * from \"./models\";\nexport * from \"./libs\";\nexport {typeOf, isArray, isString, isNumber, mergeKeys} from \"./utils\";\n\nschemaKeyWordFactory.add(\"definitions\", definitions)\n    .add(\"oneof\", oneof)\n    .add(\"anyof\", anyof)\n    .add(\"ref\", ref);\n\nschemaTypeFactory.add(\"array\", array)\n    .add(\"normal\", normal)\n    // .add(\"undefined\", none)\n    // .add(\"number\", none)\n    // .add(\"null\", none)\n    // .add(\"any\", none)\n    // .add(\"integer\", none)\n    // .add(\"boolean\", none)\n    .add(\"object\", object);\n\nexport {\n    schemaKeysFactory,\n    schemaFieldFactory,\n    schemaKeyWordFactory,\n    schemaTypeFactory\n};\n"],"sourceRoot":""}